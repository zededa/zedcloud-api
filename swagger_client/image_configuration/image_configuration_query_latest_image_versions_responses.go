// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package image_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ImageConfigurationQueryLatestImageVersionsReader is a Reader for the ImageConfigurationQueryLatestImageVersions structure.
type ImageConfigurationQueryLatestImageVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageConfigurationQueryLatestImageVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageConfigurationQueryLatestImageVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImageConfigurationQueryLatestImageVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImageConfigurationQueryLatestImageVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImageConfigurationQueryLatestImageVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageConfigurationQueryLatestImageVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewImageConfigurationQueryLatestImageVersionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewImageConfigurationQueryLatestImageVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewImageConfigurationQueryLatestImageVersionsOK creates a ImageConfigurationQueryLatestImageVersionsOK with default headers values
func NewImageConfigurationQueryLatestImageVersionsOK() *ImageConfigurationQueryLatestImageVersionsOK {
	return &ImageConfigurationQueryLatestImageVersionsOK{}
}

/* ImageConfigurationQueryLatestImageVersionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ImageConfigurationQueryLatestImageVersionsOK struct {
	Payload *swagger_models.Images
}

func (o *ImageConfigurationQueryLatestImageVersionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] imageConfigurationQueryLatestImageVersionsOK  %+v", 200, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsOK) GetPayload() *swagger_models.Images {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Images)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationQueryLatestImageVersionsBadRequest creates a ImageConfigurationQueryLatestImageVersionsBadRequest with default headers values
func NewImageConfigurationQueryLatestImageVersionsBadRequest() *ImageConfigurationQueryLatestImageVersionsBadRequest {
	return &ImageConfigurationQueryLatestImageVersionsBadRequest{}
}

/* ImageConfigurationQueryLatestImageVersionsBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type ImageConfigurationQueryLatestImageVersionsBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationQueryLatestImageVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] imageConfigurationQueryLatestImageVersionsBadRequest  %+v", 400, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationQueryLatestImageVersionsUnauthorized creates a ImageConfigurationQueryLatestImageVersionsUnauthorized with default headers values
func NewImageConfigurationQueryLatestImageVersionsUnauthorized() *ImageConfigurationQueryLatestImageVersionsUnauthorized {
	return &ImageConfigurationQueryLatestImageVersionsUnauthorized{}
}

/* ImageConfigurationQueryLatestImageVersionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ImageConfigurationQueryLatestImageVersionsUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationQueryLatestImageVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] imageConfigurationQueryLatestImageVersionsUnauthorized  %+v", 401, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationQueryLatestImageVersionsForbidden creates a ImageConfigurationQueryLatestImageVersionsForbidden with default headers values
func NewImageConfigurationQueryLatestImageVersionsForbidden() *ImageConfigurationQueryLatestImageVersionsForbidden {
	return &ImageConfigurationQueryLatestImageVersionsForbidden{}
}

/* ImageConfigurationQueryLatestImageVersionsForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ImageConfigurationQueryLatestImageVersionsForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationQueryLatestImageVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] imageConfigurationQueryLatestImageVersionsForbidden  %+v", 403, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationQueryLatestImageVersionsInternalServerError creates a ImageConfigurationQueryLatestImageVersionsInternalServerError with default headers values
func NewImageConfigurationQueryLatestImageVersionsInternalServerError() *ImageConfigurationQueryLatestImageVersionsInternalServerError {
	return &ImageConfigurationQueryLatestImageVersionsInternalServerError{}
}

/* ImageConfigurationQueryLatestImageVersionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ImageConfigurationQueryLatestImageVersionsInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationQueryLatestImageVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] imageConfigurationQueryLatestImageVersionsInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationQueryLatestImageVersionsGatewayTimeout creates a ImageConfigurationQueryLatestImageVersionsGatewayTimeout with default headers values
func NewImageConfigurationQueryLatestImageVersionsGatewayTimeout() *ImageConfigurationQueryLatestImageVersionsGatewayTimeout {
	return &ImageConfigurationQueryLatestImageVersionsGatewayTimeout{}
}

/* ImageConfigurationQueryLatestImageVersionsGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ImageConfigurationQueryLatestImageVersionsGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationQueryLatestImageVersionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] imageConfigurationQueryLatestImageVersionsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationQueryLatestImageVersionsDefault creates a ImageConfigurationQueryLatestImageVersionsDefault with default headers values
func NewImageConfigurationQueryLatestImageVersionsDefault(code int) *ImageConfigurationQueryLatestImageVersionsDefault {
	return &ImageConfigurationQueryLatestImageVersionsDefault{
		_statusCode: code,
	}
}

/* ImageConfigurationQueryLatestImageVersionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ImageConfigurationQueryLatestImageVersionsDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the image configuration query latest image versions default response
func (o *ImageConfigurationQueryLatestImageVersionsDefault) Code() int {
	return o._statusCode
}

func (o *ImageConfigurationQueryLatestImageVersionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images/baseos/latest][%d] ImageConfiguration_QueryLatestImageVersions default  %+v", o._statusCode, o.Payload)
}
func (o *ImageConfigurationQueryLatestImageVersionsDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ImageConfigurationQueryLatestImageVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
