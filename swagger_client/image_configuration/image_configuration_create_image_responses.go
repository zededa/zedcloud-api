// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package image_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ImageConfigurationCreateImageReader is a Reader for the ImageConfigurationCreateImage structure.
type ImageConfigurationCreateImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageConfigurationCreateImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageConfigurationCreateImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImageConfigurationCreateImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImageConfigurationCreateImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImageConfigurationCreateImageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImageConfigurationCreateImageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageConfigurationCreateImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewImageConfigurationCreateImageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewImageConfigurationCreateImageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewImageConfigurationCreateImageOK creates a ImageConfigurationCreateImageOK with default headers values
func NewImageConfigurationCreateImageOK() *ImageConfigurationCreateImageOK {
	return &ImageConfigurationCreateImageOK{}
}

/* ImageConfigurationCreateImageOK describes a response with status code 200, with default header values.

A successful response.
*/
type ImageConfigurationCreateImageOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageOK) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageOK  %+v", 200, o.Payload)
}
func (o *ImageConfigurationCreateImageOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageBadRequest creates a ImageConfigurationCreateImageBadRequest with default headers values
func NewImageConfigurationCreateImageBadRequest() *ImageConfigurationCreateImageBadRequest {
	return &ImageConfigurationCreateImageBadRequest{}
}

/* ImageConfigurationCreateImageBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type ImageConfigurationCreateImageBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageBadRequest  %+v", 400, o.Payload)
}
func (o *ImageConfigurationCreateImageBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageUnauthorized creates a ImageConfigurationCreateImageUnauthorized with default headers values
func NewImageConfigurationCreateImageUnauthorized() *ImageConfigurationCreateImageUnauthorized {
	return &ImageConfigurationCreateImageUnauthorized{}
}

/* ImageConfigurationCreateImageUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ImageConfigurationCreateImageUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageUnauthorized  %+v", 401, o.Payload)
}
func (o *ImageConfigurationCreateImageUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageForbidden creates a ImageConfigurationCreateImageForbidden with default headers values
func NewImageConfigurationCreateImageForbidden() *ImageConfigurationCreateImageForbidden {
	return &ImageConfigurationCreateImageForbidden{}
}

/* ImageConfigurationCreateImageForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ImageConfigurationCreateImageForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageForbidden  %+v", 403, o.Payload)
}
func (o *ImageConfigurationCreateImageForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageConflict creates a ImageConfigurationCreateImageConflict with default headers values
func NewImageConfigurationCreateImageConflict() *ImageConfigurationCreateImageConflict {
	return &ImageConfigurationCreateImageConflict{}
}

/* ImageConfigurationCreateImageConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this edge application image record will conflict with an already existing edge application image record.
*/
type ImageConfigurationCreateImageConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageConflict) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageConflict  %+v", 409, o.Payload)
}
func (o *ImageConfigurationCreateImageConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageInternalServerError creates a ImageConfigurationCreateImageInternalServerError with default headers values
func NewImageConfigurationCreateImageInternalServerError() *ImageConfigurationCreateImageInternalServerError {
	return &ImageConfigurationCreateImageInternalServerError{}
}

/* ImageConfigurationCreateImageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ImageConfigurationCreateImageInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageConfigurationCreateImageInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageGatewayTimeout creates a ImageConfigurationCreateImageGatewayTimeout with default headers values
func NewImageConfigurationCreateImageGatewayTimeout() *ImageConfigurationCreateImageGatewayTimeout {
	return &ImageConfigurationCreateImageGatewayTimeout{}
}

/* ImageConfigurationCreateImageGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ImageConfigurationCreateImageGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationCreateImageGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] imageConfigurationCreateImageGatewayTimeout  %+v", 504, o.Payload)
}
func (o *ImageConfigurationCreateImageGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationCreateImageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationCreateImageDefault creates a ImageConfigurationCreateImageDefault with default headers values
func NewImageConfigurationCreateImageDefault(code int) *ImageConfigurationCreateImageDefault {
	return &ImageConfigurationCreateImageDefault{
		_statusCode: code,
	}
}

/* ImageConfigurationCreateImageDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ImageConfigurationCreateImageDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the image configuration create image default response
func (o *ImageConfigurationCreateImageDefault) Code() int {
	return o._statusCode
}

func (o *ImageConfigurationCreateImageDefault) Error() string {
	return fmt.Sprintf("[POST /v1/apps/images][%d] ImageConfiguration_CreateImage default  %+v", o._statusCode, o.Payload)
}
func (o *ImageConfigurationCreateImageDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ImageConfigurationCreateImageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
