// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package image_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ImageConfigurationDeleteImageReader is a Reader for the ImageConfigurationDeleteImage structure.
type ImageConfigurationDeleteImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageConfigurationDeleteImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageConfigurationDeleteImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewImageConfigurationDeleteImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImageConfigurationDeleteImageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImageConfigurationDeleteImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImageConfigurationDeleteImageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageConfigurationDeleteImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewImageConfigurationDeleteImageGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewImageConfigurationDeleteImageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewImageConfigurationDeleteImageOK creates a ImageConfigurationDeleteImageOK with default headers values
func NewImageConfigurationDeleteImageOK() *ImageConfigurationDeleteImageOK {
	return &ImageConfigurationDeleteImageOK{}
}

/* ImageConfigurationDeleteImageOK describes a response with status code 200, with default header values.

A successful response.
*/
type ImageConfigurationDeleteImageOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageOK  %+v", 200, o.Payload)
}
func (o *ImageConfigurationDeleteImageOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageUnauthorized creates a ImageConfigurationDeleteImageUnauthorized with default headers values
func NewImageConfigurationDeleteImageUnauthorized() *ImageConfigurationDeleteImageUnauthorized {
	return &ImageConfigurationDeleteImageUnauthorized{}
}

/* ImageConfigurationDeleteImageUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ImageConfigurationDeleteImageUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageUnauthorized  %+v", 401, o.Payload)
}
func (o *ImageConfigurationDeleteImageUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageForbidden creates a ImageConfigurationDeleteImageForbidden with default headers values
func NewImageConfigurationDeleteImageForbidden() *ImageConfigurationDeleteImageForbidden {
	return &ImageConfigurationDeleteImageForbidden{}
}

/* ImageConfigurationDeleteImageForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ImageConfigurationDeleteImageForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageForbidden  %+v", 403, o.Payload)
}
func (o *ImageConfigurationDeleteImageForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageNotFound creates a ImageConfigurationDeleteImageNotFound with default headers values
func NewImageConfigurationDeleteImageNotFound() *ImageConfigurationDeleteImageNotFound {
	return &ImageConfigurationDeleteImageNotFound{}
}

/* ImageConfigurationDeleteImageNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ImageConfigurationDeleteImageNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageNotFound  %+v", 404, o.Payload)
}
func (o *ImageConfigurationDeleteImageNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageConflict creates a ImageConfigurationDeleteImageConflict with default headers values
func NewImageConfigurationDeleteImageConflict() *ImageConfigurationDeleteImageConflict {
	return &ImageConfigurationDeleteImageConflict{}
}

/* ImageConfigurationDeleteImageConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because there are edge application bundles using this edge application image
*/
type ImageConfigurationDeleteImageConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageConflict) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageConflict  %+v", 409, o.Payload)
}
func (o *ImageConfigurationDeleteImageConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageInternalServerError creates a ImageConfigurationDeleteImageInternalServerError with default headers values
func NewImageConfigurationDeleteImageInternalServerError() *ImageConfigurationDeleteImageInternalServerError {
	return &ImageConfigurationDeleteImageInternalServerError{}
}

/* ImageConfigurationDeleteImageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ImageConfigurationDeleteImageInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageInternalServerError  %+v", 500, o.Payload)
}
func (o *ImageConfigurationDeleteImageInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageGatewayTimeout creates a ImageConfigurationDeleteImageGatewayTimeout with default headers values
func NewImageConfigurationDeleteImageGatewayTimeout() *ImageConfigurationDeleteImageGatewayTimeout {
	return &ImageConfigurationDeleteImageGatewayTimeout{}
}

/* ImageConfigurationDeleteImageGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ImageConfigurationDeleteImageGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ImageConfigurationDeleteImageGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] imageConfigurationDeleteImageGatewayTimeout  %+v", 504, o.Payload)
}
func (o *ImageConfigurationDeleteImageGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationDeleteImageDefault creates a ImageConfigurationDeleteImageDefault with default headers values
func NewImageConfigurationDeleteImageDefault(code int) *ImageConfigurationDeleteImageDefault {
	return &ImageConfigurationDeleteImageDefault{
		_statusCode: code,
	}
}

/* ImageConfigurationDeleteImageDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ImageConfigurationDeleteImageDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the image configuration delete image default response
func (o *ImageConfigurationDeleteImageDefault) Code() int {
	return o._statusCode
}

func (o *ImageConfigurationDeleteImageDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/images/id/{id}][%d] ImageConfiguration_DeleteImage default  %+v", o._statusCode, o.Payload)
}
func (o *ImageConfigurationDeleteImageDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ImageConfigurationDeleteImageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
