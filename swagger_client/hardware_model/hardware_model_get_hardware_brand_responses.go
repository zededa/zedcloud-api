// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package hardware_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// HardwareModelGetHardwareBrandReader is a Reader for the HardwareModelGetHardwareBrand structure.
type HardwareModelGetHardwareBrandReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HardwareModelGetHardwareBrandReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHardwareModelGetHardwareBrandOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHardwareModelGetHardwareBrandUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHardwareModelGetHardwareBrandForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHardwareModelGetHardwareBrandNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHardwareModelGetHardwareBrandInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewHardwareModelGetHardwareBrandGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewHardwareModelGetHardwareBrandDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHardwareModelGetHardwareBrandOK creates a HardwareModelGetHardwareBrandOK with default headers values
func NewHardwareModelGetHardwareBrandOK() *HardwareModelGetHardwareBrandOK {
	return &HardwareModelGetHardwareBrandOK{}
}

/* HardwareModelGetHardwareBrandOK describes a response with status code 200, with default header values.

A successful response.
*/
type HardwareModelGetHardwareBrandOK struct {
	Payload *swagger_models.SysBrand
}

func (o *HardwareModelGetHardwareBrandOK) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] hardwareModelGetHardwareBrandOK  %+v", 200, o.Payload)
}
func (o *HardwareModelGetHardwareBrandOK) GetPayload() *swagger_models.SysBrand {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.SysBrand)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetHardwareBrandUnauthorized creates a HardwareModelGetHardwareBrandUnauthorized with default headers values
func NewHardwareModelGetHardwareBrandUnauthorized() *HardwareModelGetHardwareBrandUnauthorized {
	return &HardwareModelGetHardwareBrandUnauthorized{}
}

/* HardwareModelGetHardwareBrandUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type HardwareModelGetHardwareBrandUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *HardwareModelGetHardwareBrandUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] hardwareModelGetHardwareBrandUnauthorized  %+v", 401, o.Payload)
}
func (o *HardwareModelGetHardwareBrandUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetHardwareBrandForbidden creates a HardwareModelGetHardwareBrandForbidden with default headers values
func NewHardwareModelGetHardwareBrandForbidden() *HardwareModelGetHardwareBrandForbidden {
	return &HardwareModelGetHardwareBrandForbidden{}
}

/* HardwareModelGetHardwareBrandForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type HardwareModelGetHardwareBrandForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *HardwareModelGetHardwareBrandForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] hardwareModelGetHardwareBrandForbidden  %+v", 403, o.Payload)
}
func (o *HardwareModelGetHardwareBrandForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetHardwareBrandNotFound creates a HardwareModelGetHardwareBrandNotFound with default headers values
func NewHardwareModelGetHardwareBrandNotFound() *HardwareModelGetHardwareBrandNotFound {
	return &HardwareModelGetHardwareBrandNotFound{}
}

/* HardwareModelGetHardwareBrandNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type HardwareModelGetHardwareBrandNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *HardwareModelGetHardwareBrandNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] hardwareModelGetHardwareBrandNotFound  %+v", 404, o.Payload)
}
func (o *HardwareModelGetHardwareBrandNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetHardwareBrandInternalServerError creates a HardwareModelGetHardwareBrandInternalServerError with default headers values
func NewHardwareModelGetHardwareBrandInternalServerError() *HardwareModelGetHardwareBrandInternalServerError {
	return &HardwareModelGetHardwareBrandInternalServerError{}
}

/* HardwareModelGetHardwareBrandInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type HardwareModelGetHardwareBrandInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *HardwareModelGetHardwareBrandInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] hardwareModelGetHardwareBrandInternalServerError  %+v", 500, o.Payload)
}
func (o *HardwareModelGetHardwareBrandInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetHardwareBrandGatewayTimeout creates a HardwareModelGetHardwareBrandGatewayTimeout with default headers values
func NewHardwareModelGetHardwareBrandGatewayTimeout() *HardwareModelGetHardwareBrandGatewayTimeout {
	return &HardwareModelGetHardwareBrandGatewayTimeout{}
}

/* HardwareModelGetHardwareBrandGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type HardwareModelGetHardwareBrandGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *HardwareModelGetHardwareBrandGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] hardwareModelGetHardwareBrandGatewayTimeout  %+v", 504, o.Payload)
}
func (o *HardwareModelGetHardwareBrandGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetHardwareBrandDefault creates a HardwareModelGetHardwareBrandDefault with default headers values
func NewHardwareModelGetHardwareBrandDefault(code int) *HardwareModelGetHardwareBrandDefault {
	return &HardwareModelGetHardwareBrandDefault{
		_statusCode: code,
	}
}

/* HardwareModelGetHardwareBrandDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type HardwareModelGetHardwareBrandDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the hardware model get hardware brand default response
func (o *HardwareModelGetHardwareBrandDefault) Code() int {
	return o._statusCode
}

func (o *HardwareModelGetHardwareBrandDefault) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] HardwareModel_GetHardwareBrand default  %+v", o._statusCode, o.Payload)
}
func (o *HardwareModelGetHardwareBrandDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *HardwareModelGetHardwareBrandDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
