// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeConfigurationCreateEdgeNodeReader is a Reader for the EdgeNodeConfigurationCreateEdgeNode structure.
type EdgeNodeConfigurationCreateEdgeNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationCreateEdgeNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationCreateEdgeNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEdgeNodeConfigurationCreateEdgeNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEdgeNodeConfigurationCreateEdgeNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationCreateEdgeNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewEdgeNodeConfigurationCreateEdgeNodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationCreateEdgeNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationCreateEdgeNodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationCreateEdgeNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationCreateEdgeNodeOK creates a EdgeNodeConfigurationCreateEdgeNodeOK with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeOK() *EdgeNodeConfigurationCreateEdgeNodeOK {
	return &EdgeNodeConfigurationCreateEdgeNodeOK{}
}

/* EdgeNodeConfigurationCreateEdgeNodeOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationCreateEdgeNodeOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeOK) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeBadRequest creates a EdgeNodeConfigurationCreateEdgeNodeBadRequest with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeBadRequest() *EdgeNodeConfigurationCreateEdgeNodeBadRequest {
	return &EdgeNodeConfigurationCreateEdgeNodeBadRequest{}
}

/* EdgeNodeConfigurationCreateEdgeNodeBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type EdgeNodeConfigurationCreateEdgeNodeBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeBadRequest  %+v", 400, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeUnauthorized creates a EdgeNodeConfigurationCreateEdgeNodeUnauthorized with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeUnauthorized() *EdgeNodeConfigurationCreateEdgeNodeUnauthorized {
	return &EdgeNodeConfigurationCreateEdgeNodeUnauthorized{}
}

/* EdgeNodeConfigurationCreateEdgeNodeUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationCreateEdgeNodeUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeForbidden creates a EdgeNodeConfigurationCreateEdgeNodeForbidden with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeForbidden() *EdgeNodeConfigurationCreateEdgeNodeForbidden {
	return &EdgeNodeConfigurationCreateEdgeNodeForbidden{}
}

/* EdgeNodeConfigurationCreateEdgeNodeForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationCreateEdgeNodeForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeConflict creates a EdgeNodeConfigurationCreateEdgeNodeConflict with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeConflict() *EdgeNodeConfigurationCreateEdgeNodeConflict {
	return &EdgeNodeConfigurationCreateEdgeNodeConflict{}
}

/* EdgeNodeConfigurationCreateEdgeNodeConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this edge node record will conflict with an already existing edge node record.
*/
type EdgeNodeConfigurationCreateEdgeNodeConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeConflict) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeConflict  %+v", 409, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeInternalServerError creates a EdgeNodeConfigurationCreateEdgeNodeInternalServerError with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeInternalServerError() *EdgeNodeConfigurationCreateEdgeNodeInternalServerError {
	return &EdgeNodeConfigurationCreateEdgeNodeInternalServerError{}
}

/* EdgeNodeConfigurationCreateEdgeNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationCreateEdgeNodeInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeGatewayTimeout creates a EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeGatewayTimeout() *EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout {
	return &EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout{}
}

/* EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] edgeNodeConfigurationCreateEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationCreateEdgeNodeDefault creates a EdgeNodeConfigurationCreateEdgeNodeDefault with default headers values
func NewEdgeNodeConfigurationCreateEdgeNodeDefault(code int) *EdgeNodeConfigurationCreateEdgeNodeDefault {
	return &EdgeNodeConfigurationCreateEdgeNodeDefault{
		_statusCode: code,
	}
}

/* EdgeNodeConfigurationCreateEdgeNodeDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationCreateEdgeNodeDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration create edge node default response
func (o *EdgeNodeConfigurationCreateEdgeNodeDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeConfigurationCreateEdgeNodeDefault) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] EdgeNodeConfiguration_CreateEdgeNode default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeConfigurationCreateEdgeNodeDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationCreateEdgeNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
