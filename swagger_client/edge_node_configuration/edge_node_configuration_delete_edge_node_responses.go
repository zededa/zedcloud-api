// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeConfigurationDeleteEdgeNodeReader is a Reader for the EdgeNodeConfigurationDeleteEdgeNode structure.
type EdgeNodeConfigurationDeleteEdgeNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationDeleteEdgeNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationDeleteEdgeNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationDeleteEdgeNodeOK creates a EdgeNodeConfigurationDeleteEdgeNodeOK with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeOK() *EdgeNodeConfigurationDeleteEdgeNodeOK {
	return &EdgeNodeConfigurationDeleteEdgeNodeOK{}
}

/* EdgeNodeConfigurationDeleteEdgeNodeOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationDeleteEdgeNodeOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] edgeNodeConfigurationDeleteEdgeNodeOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationDeleteEdgeNodeUnauthorized creates a EdgeNodeConfigurationDeleteEdgeNodeUnauthorized with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeUnauthorized() *EdgeNodeConfigurationDeleteEdgeNodeUnauthorized {
	return &EdgeNodeConfigurationDeleteEdgeNodeUnauthorized{}
}

/* EdgeNodeConfigurationDeleteEdgeNodeUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationDeleteEdgeNodeUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] edgeNodeConfigurationDeleteEdgeNodeUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationDeleteEdgeNodeForbidden creates a EdgeNodeConfigurationDeleteEdgeNodeForbidden with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeForbidden() *EdgeNodeConfigurationDeleteEdgeNodeForbidden {
	return &EdgeNodeConfigurationDeleteEdgeNodeForbidden{}
}

/* EdgeNodeConfigurationDeleteEdgeNodeForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationDeleteEdgeNodeForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] edgeNodeConfigurationDeleteEdgeNodeForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationDeleteEdgeNodeNotFound creates a EdgeNodeConfigurationDeleteEdgeNodeNotFound with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeNotFound() *EdgeNodeConfigurationDeleteEdgeNodeNotFound {
	return &EdgeNodeConfigurationDeleteEdgeNodeNotFound{}
}

/* EdgeNodeConfigurationDeleteEdgeNodeNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeConfigurationDeleteEdgeNodeNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] edgeNodeConfigurationDeleteEdgeNodeNotFound  %+v", 404, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationDeleteEdgeNodeInternalServerError creates a EdgeNodeConfigurationDeleteEdgeNodeInternalServerError with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeInternalServerError() *EdgeNodeConfigurationDeleteEdgeNodeInternalServerError {
	return &EdgeNodeConfigurationDeleteEdgeNodeInternalServerError{}
}

/* EdgeNodeConfigurationDeleteEdgeNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationDeleteEdgeNodeInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] edgeNodeConfigurationDeleteEdgeNodeInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout creates a EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout() *EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout {
	return &EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout{}
}

/* EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] edgeNodeConfigurationDeleteEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationDeleteEdgeNodeDefault creates a EdgeNodeConfigurationDeleteEdgeNodeDefault with default headers values
func NewEdgeNodeConfigurationDeleteEdgeNodeDefault(code int) *EdgeNodeConfigurationDeleteEdgeNodeDefault {
	return &EdgeNodeConfigurationDeleteEdgeNodeDefault{
		_statusCode: code,
	}
}

/* EdgeNodeConfigurationDeleteEdgeNodeDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationDeleteEdgeNodeDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration delete edge node default response
func (o *EdgeNodeConfigurationDeleteEdgeNodeDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/devices/id/{id}][%d] EdgeNodeConfiguration_DeleteEdgeNode default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeConfigurationDeleteEdgeNodeDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationDeleteEdgeNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
