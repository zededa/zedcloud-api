// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeConfigurationGetEdgeNodeByNameReader is a Reader for the EdgeNodeConfigurationGetEdgeNodeByName structure.
type EdgeNodeConfigurationGetEdgeNodeByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationGetEdgeNodeByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationGetEdgeNodeByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameOK creates a EdgeNodeConfigurationGetEdgeNodeByNameOK with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameOK() *EdgeNodeConfigurationGetEdgeNodeByNameOK {
	return &EdgeNodeConfigurationGetEdgeNodeByNameOK{}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameOK struct {
	Payload *swagger_models.DeviceConfig
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] edgeNodeConfigurationGetEdgeNodeByNameOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameOK) GetPayload() *swagger_models.DeviceConfig {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.DeviceConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameUnauthorized creates a EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameUnauthorized() *EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized {
	return &EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized{}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] edgeNodeConfigurationGetEdgeNodeByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameForbidden creates a EdgeNodeConfigurationGetEdgeNodeByNameForbidden with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameForbidden() *EdgeNodeConfigurationGetEdgeNodeByNameForbidden {
	return &EdgeNodeConfigurationGetEdgeNodeByNameForbidden{}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] edgeNodeConfigurationGetEdgeNodeByNameForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameNotFound creates a EdgeNodeConfigurationGetEdgeNodeByNameNotFound with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameNotFound() *EdgeNodeConfigurationGetEdgeNodeByNameNotFound {
	return &EdgeNodeConfigurationGetEdgeNodeByNameNotFound{}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] edgeNodeConfigurationGetEdgeNodeByNameNotFound  %+v", 404, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameInternalServerError creates a EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameInternalServerError() *EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError {
	return &EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError{}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] edgeNodeConfigurationGetEdgeNodeByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout creates a EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout() *EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout {
	return &EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout{}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] edgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeNodeByNameDefault creates a EdgeNodeConfigurationGetEdgeNodeByNameDefault with default headers values
func NewEdgeNodeConfigurationGetEdgeNodeByNameDefault(code int) *EdgeNodeConfigurationGetEdgeNodeByNameDefault {
	return &EdgeNodeConfigurationGetEdgeNodeByNameDefault{
		_statusCode: code,
	}
}

/* EdgeNodeConfigurationGetEdgeNodeByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationGetEdgeNodeByNameDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration get edge node by name default response
func (o *EdgeNodeConfigurationGetEdgeNodeByNameDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}][%d] EdgeNodeConfiguration_GetEdgeNodeByName default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeConfigurationGetEdgeNodeByNameDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeNodeByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
