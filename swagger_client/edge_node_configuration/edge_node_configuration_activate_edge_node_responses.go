// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeConfigurationActivateEdgeNodeReader is a Reader for the EdgeNodeConfigurationActivateEdgeNode structure.
type EdgeNodeConfigurationActivateEdgeNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationActivateEdgeNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationActivateEdgeNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeConfigurationActivateEdgeNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationActivateEdgeNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeConfigurationActivateEdgeNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewEdgeNodeConfigurationActivateEdgeNodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationActivateEdgeNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationActivateEdgeNodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationActivateEdgeNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationActivateEdgeNodeOK creates a EdgeNodeConfigurationActivateEdgeNodeOK with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeOK() *EdgeNodeConfigurationActivateEdgeNodeOK {
	return &EdgeNodeConfigurationActivateEdgeNodeOK{}
}

/* EdgeNodeConfigurationActivateEdgeNodeOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationActivateEdgeNodeOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeOK) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeUnauthorized creates a EdgeNodeConfigurationActivateEdgeNodeUnauthorized with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeUnauthorized() *EdgeNodeConfigurationActivateEdgeNodeUnauthorized {
	return &EdgeNodeConfigurationActivateEdgeNodeUnauthorized{}
}

/* EdgeNodeConfigurationActivateEdgeNodeUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationActivateEdgeNodeUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeForbidden creates a EdgeNodeConfigurationActivateEdgeNodeForbidden with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeForbidden() *EdgeNodeConfigurationActivateEdgeNodeForbidden {
	return &EdgeNodeConfigurationActivateEdgeNodeForbidden{}
}

/* EdgeNodeConfigurationActivateEdgeNodeForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationActivateEdgeNodeForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeNotFound creates a EdgeNodeConfigurationActivateEdgeNodeNotFound with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeNotFound() *EdgeNodeConfigurationActivateEdgeNodeNotFound {
	return &EdgeNodeConfigurationActivateEdgeNodeNotFound{}
}

/* EdgeNodeConfigurationActivateEdgeNodeNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeConfigurationActivateEdgeNodeNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeNotFound  %+v", 404, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeConflict creates a EdgeNodeConfigurationActivateEdgeNodeConflict with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeConflict() *EdgeNodeConfigurationActivateEdgeNodeConflict {
	return &EdgeNodeConfigurationActivateEdgeNodeConflict{}
}

/* EdgeNodeConfigurationActivateEdgeNodeConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge node record.
*/
type EdgeNodeConfigurationActivateEdgeNodeConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeConflict  %+v", 409, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeInternalServerError creates a EdgeNodeConfigurationActivateEdgeNodeInternalServerError with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeInternalServerError() *EdgeNodeConfigurationActivateEdgeNodeInternalServerError {
	return &EdgeNodeConfigurationActivateEdgeNodeInternalServerError{}
}

/* EdgeNodeConfigurationActivateEdgeNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationActivateEdgeNodeInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeGatewayTimeout creates a EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeGatewayTimeout() *EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout {
	return &EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout{}
}

/* EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] edgeNodeConfigurationActivateEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationActivateEdgeNodeDefault creates a EdgeNodeConfigurationActivateEdgeNodeDefault with default headers values
func NewEdgeNodeConfigurationActivateEdgeNodeDefault(code int) *EdgeNodeConfigurationActivateEdgeNodeDefault {
	return &EdgeNodeConfigurationActivateEdgeNodeDefault{
		_statusCode: code,
	}
}

/* EdgeNodeConfigurationActivateEdgeNodeDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationActivateEdgeNodeDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration activate edge node default response
func (o *EdgeNodeConfigurationActivateEdgeNodeDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeConfigurationActivateEdgeNodeDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/activate][%d] EdgeNodeConfiguration_ActivateEdgeNode default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeConfigurationActivateEdgeNodeDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationActivateEdgeNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
