// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package artifact_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ArtifactManagerDeleteArtifactReader is a Reader for the ArtifactManagerDeleteArtifact structure.
type ArtifactManagerDeleteArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArtifactManagerDeleteArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArtifactManagerDeleteArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewArtifactManagerDeleteArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewArtifactManagerDeleteArtifactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewArtifactManagerDeleteArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewArtifactManagerDeleteArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewArtifactManagerDeleteArtifactGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewArtifactManagerDeleteArtifactDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArtifactManagerDeleteArtifactOK creates a ArtifactManagerDeleteArtifactOK with default headers values
func NewArtifactManagerDeleteArtifactOK() *ArtifactManagerDeleteArtifactOK {
	return &ArtifactManagerDeleteArtifactOK{}
}

/*
ArtifactManagerDeleteArtifactOK describes a response with status code 200, with default header values.

A successful response.
*/
type ArtifactManagerDeleteArtifactOK struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this artifact manager delete artifact o k response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this artifact manager delete artifact o k response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this artifact manager delete artifact o k response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this artifact manager delete artifact o k response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this artifact manager delete artifact o k response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the artifact manager delete artifact o k response
func (o *ArtifactManagerDeleteArtifactOK) Code() int {
	return 200
}

func (o *ArtifactManagerDeleteArtifactOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactOK  %+v", 200, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactOK) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactOK  %+v", 200, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactUnauthorized creates a ArtifactManagerDeleteArtifactUnauthorized with default headers values
func NewArtifactManagerDeleteArtifactUnauthorized() *ArtifactManagerDeleteArtifactUnauthorized {
	return &ArtifactManagerDeleteArtifactUnauthorized{}
}

/*
ArtifactManagerDeleteArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ArtifactManagerDeleteArtifactUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this artifact manager delete artifact unauthorized response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this artifact manager delete artifact unauthorized response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this artifact manager delete artifact unauthorized response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this artifact manager delete artifact unauthorized response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this artifact manager delete artifact unauthorized response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the artifact manager delete artifact unauthorized response
func (o *ArtifactManagerDeleteArtifactUnauthorized) Code() int {
	return 401
}

func (o *ArtifactManagerDeleteArtifactUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactForbidden creates a ArtifactManagerDeleteArtifactForbidden with default headers values
func NewArtifactManagerDeleteArtifactForbidden() *ArtifactManagerDeleteArtifactForbidden {
	return &ArtifactManagerDeleteArtifactForbidden{}
}

/*
ArtifactManagerDeleteArtifactForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ArtifactManagerDeleteArtifactForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this artifact manager delete artifact forbidden response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this artifact manager delete artifact forbidden response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this artifact manager delete artifact forbidden response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this artifact manager delete artifact forbidden response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this artifact manager delete artifact forbidden response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the artifact manager delete artifact forbidden response
func (o *ArtifactManagerDeleteArtifactForbidden) Code() int {
	return 403
}

func (o *ArtifactManagerDeleteArtifactForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactForbidden  %+v", 403, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactForbidden  %+v", 403, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactNotFound creates a ArtifactManagerDeleteArtifactNotFound with default headers values
func NewArtifactManagerDeleteArtifactNotFound() *ArtifactManagerDeleteArtifactNotFound {
	return &ArtifactManagerDeleteArtifactNotFound{}
}

/*
ArtifactManagerDeleteArtifactNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ArtifactManagerDeleteArtifactNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this artifact manager delete artifact not found response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this artifact manager delete artifact not found response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this artifact manager delete artifact not found response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this artifact manager delete artifact not found response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this artifact manager delete artifact not found response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the artifact manager delete artifact not found response
func (o *ArtifactManagerDeleteArtifactNotFound) Code() int {
	return 404
}

func (o *ArtifactManagerDeleteArtifactNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactNotFound  %+v", 404, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactNotFound  %+v", 404, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactInternalServerError creates a ArtifactManagerDeleteArtifactInternalServerError with default headers values
func NewArtifactManagerDeleteArtifactInternalServerError() *ArtifactManagerDeleteArtifactInternalServerError {
	return &ArtifactManagerDeleteArtifactInternalServerError{}
}

/*
ArtifactManagerDeleteArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ArtifactManagerDeleteArtifactInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this artifact manager delete artifact internal server error response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this artifact manager delete artifact internal server error response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this artifact manager delete artifact internal server error response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this artifact manager delete artifact internal server error response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this artifact manager delete artifact internal server error response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the artifact manager delete artifact internal server error response
func (o *ArtifactManagerDeleteArtifactInternalServerError) Code() int {
	return 500
}

func (o *ArtifactManagerDeleteArtifactInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactInternalServerError  %+v", 500, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactInternalServerError  %+v", 500, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactGatewayTimeout creates a ArtifactManagerDeleteArtifactGatewayTimeout with default headers values
func NewArtifactManagerDeleteArtifactGatewayTimeout() *ArtifactManagerDeleteArtifactGatewayTimeout {
	return &ArtifactManagerDeleteArtifactGatewayTimeout{}
}

/*
ArtifactManagerDeleteArtifactGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ArtifactManagerDeleteArtifactGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this artifact manager delete artifact gateway timeout response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this artifact manager delete artifact gateway timeout response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this artifact manager delete artifact gateway timeout response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this artifact manager delete artifact gateway timeout response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this artifact manager delete artifact gateway timeout response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the artifact manager delete artifact gateway timeout response
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) Code() int {
	return 504
}

func (o *ArtifactManagerDeleteArtifactGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactDefault creates a ArtifactManagerDeleteArtifactDefault with default headers values
func NewArtifactManagerDeleteArtifactDefault(code int) *ArtifactManagerDeleteArtifactDefault {
	return &ArtifactManagerDeleteArtifactDefault{
		_statusCode: code,
	}
}

/*
ArtifactManagerDeleteArtifactDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ArtifactManagerDeleteArtifactDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// IsSuccess returns true when this artifact manager delete artifact default response has a 2xx status code
func (o *ArtifactManagerDeleteArtifactDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this artifact manager delete artifact default response has a 3xx status code
func (o *ArtifactManagerDeleteArtifactDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this artifact manager delete artifact default response has a 4xx status code
func (o *ArtifactManagerDeleteArtifactDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this artifact manager delete artifact default response has a 5xx status code
func (o *ArtifactManagerDeleteArtifactDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this artifact manager delete artifact default response a status code equal to that given
func (o *ArtifactManagerDeleteArtifactDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the artifact manager delete artifact default response
func (o *ArtifactManagerDeleteArtifactDefault) Code() int {
	return o._statusCode
}

func (o *ArtifactManagerDeleteArtifactDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] ArtifactManager_DeleteArtifact default  %+v", o._statusCode, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] ArtifactManager_DeleteArtifact default  %+v", o._statusCode, o.Payload)
}

func (o *ArtifactManagerDeleteArtifactDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
