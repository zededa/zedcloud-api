// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package artifact_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ArtifactManagerDeleteArtifactReader is a Reader for the ArtifactManagerDeleteArtifact structure.
type ArtifactManagerDeleteArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArtifactManagerDeleteArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArtifactManagerDeleteArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewArtifactManagerDeleteArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewArtifactManagerDeleteArtifactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewArtifactManagerDeleteArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewArtifactManagerDeleteArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewArtifactManagerDeleteArtifactGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewArtifactManagerDeleteArtifactDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArtifactManagerDeleteArtifactOK creates a ArtifactManagerDeleteArtifactOK with default headers values
func NewArtifactManagerDeleteArtifactOK() *ArtifactManagerDeleteArtifactOK {
	return &ArtifactManagerDeleteArtifactOK{}
}

/* ArtifactManagerDeleteArtifactOK describes a response with status code 200, with default header values.

A successful response.
*/
type ArtifactManagerDeleteArtifactOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerDeleteArtifactOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactOK  %+v", 200, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactUnauthorized creates a ArtifactManagerDeleteArtifactUnauthorized with default headers values
func NewArtifactManagerDeleteArtifactUnauthorized() *ArtifactManagerDeleteArtifactUnauthorized {
	return &ArtifactManagerDeleteArtifactUnauthorized{}
}

/* ArtifactManagerDeleteArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ArtifactManagerDeleteArtifactUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerDeleteArtifactUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactUnauthorized  %+v", 401, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactForbidden creates a ArtifactManagerDeleteArtifactForbidden with default headers values
func NewArtifactManagerDeleteArtifactForbidden() *ArtifactManagerDeleteArtifactForbidden {
	return &ArtifactManagerDeleteArtifactForbidden{}
}

/* ArtifactManagerDeleteArtifactForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ArtifactManagerDeleteArtifactForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerDeleteArtifactForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactForbidden  %+v", 403, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactNotFound creates a ArtifactManagerDeleteArtifactNotFound with default headers values
func NewArtifactManagerDeleteArtifactNotFound() *ArtifactManagerDeleteArtifactNotFound {
	return &ArtifactManagerDeleteArtifactNotFound{}
}

/* ArtifactManagerDeleteArtifactNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ArtifactManagerDeleteArtifactNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerDeleteArtifactNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactNotFound  %+v", 404, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactInternalServerError creates a ArtifactManagerDeleteArtifactInternalServerError with default headers values
func NewArtifactManagerDeleteArtifactInternalServerError() *ArtifactManagerDeleteArtifactInternalServerError {
	return &ArtifactManagerDeleteArtifactInternalServerError{}
}

/* ArtifactManagerDeleteArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ArtifactManagerDeleteArtifactInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerDeleteArtifactInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactInternalServerError  %+v", 500, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactGatewayTimeout creates a ArtifactManagerDeleteArtifactGatewayTimeout with default headers values
func NewArtifactManagerDeleteArtifactGatewayTimeout() *ArtifactManagerDeleteArtifactGatewayTimeout {
	return &ArtifactManagerDeleteArtifactGatewayTimeout{}
}

/* ArtifactManagerDeleteArtifactGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ArtifactManagerDeleteArtifactGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerDeleteArtifactGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] artifactManagerDeleteArtifactGatewayTimeout  %+v", 504, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerDeleteArtifactDefault creates a ArtifactManagerDeleteArtifactDefault with default headers values
func NewArtifactManagerDeleteArtifactDefault(code int) *ArtifactManagerDeleteArtifactDefault {
	return &ArtifactManagerDeleteArtifactDefault{
		_statusCode: code,
	}
}

/* ArtifactManagerDeleteArtifactDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ArtifactManagerDeleteArtifactDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the artifact manager delete artifact default response
func (o *ArtifactManagerDeleteArtifactDefault) Code() int {
	return o._statusCode
}

func (o *ArtifactManagerDeleteArtifactDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/artifacts/id/{id}][%d] ArtifactManager_DeleteArtifact default  %+v", o._statusCode, o.Payload)
}
func (o *ArtifactManagerDeleteArtifactDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ArtifactManagerDeleteArtifactDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
