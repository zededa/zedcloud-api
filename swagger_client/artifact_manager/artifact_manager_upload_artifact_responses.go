// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package artifact_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ArtifactManagerUploadArtifactReader is a Reader for the ArtifactManagerUploadArtifact structure.
type ArtifactManagerUploadArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArtifactManagerUploadArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArtifactManagerUploadArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewArtifactManagerUploadArtifactAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewArtifactManagerUploadArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewArtifactManagerUploadArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewArtifactManagerUploadArtifactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewArtifactManagerUploadArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewArtifactManagerUploadArtifactGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewArtifactManagerUploadArtifactDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArtifactManagerUploadArtifactOK creates a ArtifactManagerUploadArtifactOK with default headers values
func NewArtifactManagerUploadArtifactOK() *ArtifactManagerUploadArtifactOK {
	return &ArtifactManagerUploadArtifactOK{}
}

/* ArtifactManagerUploadArtifactOK describes a response with status code 200, with default header values.

A successful response.
*/
type ArtifactManagerUploadArtifactOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactOK) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactOK  %+v", 200, o.Payload)
}
func (o *ArtifactManagerUploadArtifactOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactAccepted creates a ArtifactManagerUploadArtifactAccepted with default headers values
func NewArtifactManagerUploadArtifactAccepted() *ArtifactManagerUploadArtifactAccepted {
	return &ArtifactManagerUploadArtifactAccepted{}
}

/* ArtifactManagerUploadArtifactAccepted describes a response with status code 202, with default header values.

Accepted. The API gateway accepted the request for uploading but the uploading process has not been completed.
*/
type ArtifactManagerUploadArtifactAccepted struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactAccepted) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactAccepted  %+v", 202, o.Payload)
}
func (o *ArtifactManagerUploadArtifactAccepted) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactBadRequest creates a ArtifactManagerUploadArtifactBadRequest with default headers values
func NewArtifactManagerUploadArtifactBadRequest() *ArtifactManagerUploadArtifactBadRequest {
	return &ArtifactManagerUploadArtifactBadRequest{}
}

/* ArtifactManagerUploadArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type ArtifactManagerUploadArtifactBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactBadRequest  %+v", 400, o.Payload)
}
func (o *ArtifactManagerUploadArtifactBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactUnauthorized creates a ArtifactManagerUploadArtifactUnauthorized with default headers values
func NewArtifactManagerUploadArtifactUnauthorized() *ArtifactManagerUploadArtifactUnauthorized {
	return &ArtifactManagerUploadArtifactUnauthorized{}
}

/* ArtifactManagerUploadArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ArtifactManagerUploadArtifactUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactUnauthorized  %+v", 401, o.Payload)
}
func (o *ArtifactManagerUploadArtifactUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactForbidden creates a ArtifactManagerUploadArtifactForbidden with default headers values
func NewArtifactManagerUploadArtifactForbidden() *ArtifactManagerUploadArtifactForbidden {
	return &ArtifactManagerUploadArtifactForbidden{}
}

/* ArtifactManagerUploadArtifactForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ArtifactManagerUploadArtifactForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactForbidden  %+v", 403, o.Payload)
}
func (o *ArtifactManagerUploadArtifactForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactInternalServerError creates a ArtifactManagerUploadArtifactInternalServerError with default headers values
func NewArtifactManagerUploadArtifactInternalServerError() *ArtifactManagerUploadArtifactInternalServerError {
	return &ArtifactManagerUploadArtifactInternalServerError{}
}

/* ArtifactManagerUploadArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ArtifactManagerUploadArtifactInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactInternalServerError  %+v", 500, o.Payload)
}
func (o *ArtifactManagerUploadArtifactInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactGatewayTimeout creates a ArtifactManagerUploadArtifactGatewayTimeout with default headers values
func NewArtifactManagerUploadArtifactGatewayTimeout() *ArtifactManagerUploadArtifactGatewayTimeout {
	return &ArtifactManagerUploadArtifactGatewayTimeout{}
}

/* ArtifactManagerUploadArtifactGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ArtifactManagerUploadArtifactGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ArtifactManagerUploadArtifactGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] artifactManagerUploadArtifactGatewayTimeout  %+v", 504, o.Payload)
}
func (o *ArtifactManagerUploadArtifactGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactManagerUploadArtifactDefault creates a ArtifactManagerUploadArtifactDefault with default headers values
func NewArtifactManagerUploadArtifactDefault(code int) *ArtifactManagerUploadArtifactDefault {
	return &ArtifactManagerUploadArtifactDefault{
		_statusCode: code,
	}
}

/* ArtifactManagerUploadArtifactDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ArtifactManagerUploadArtifactDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the artifact manager upload artifact default response
func (o *ArtifactManagerUploadArtifactDefault) Code() int {
	return o._statusCode
}

func (o *ArtifactManagerUploadArtifactDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/artifacts/id/{id}/upload/chunked][%d] ArtifactManager_UploadArtifact default  %+v", o._statusCode, o.Payload)
}
func (o *ArtifactManagerUploadArtifactDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ArtifactManagerUploadArtifactDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
