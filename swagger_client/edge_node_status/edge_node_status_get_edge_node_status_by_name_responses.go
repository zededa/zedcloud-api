// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeStatusGetEdgeNodeStatusByNameReader is a Reader for the EdgeNodeStatusGetEdgeNodeStatusByName structure.
type EdgeNodeStatusGetEdgeNodeStatusByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeStatusGetEdgeNodeStatusByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameOK creates a EdgeNodeStatusGetEdgeNodeStatusByNameOK with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameOK() *EdgeNodeStatusGetEdgeNodeStatusByNameOK {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameOK{}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameOK struct {
	Payload *swagger_models.DeviceStatusMsg
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] edgeNodeStatusGetEdgeNodeStatusByNameOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameOK) GetPayload() *swagger_models.DeviceStatusMsg {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.DeviceStatusMsg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized creates a EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized() *EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized{}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] edgeNodeStatusGetEdgeNodeStatusByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameForbidden creates a EdgeNodeStatusGetEdgeNodeStatusByNameForbidden with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameForbidden() *EdgeNodeStatusGetEdgeNodeStatusByNameForbidden {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameForbidden{}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] edgeNodeStatusGetEdgeNodeStatusByNameForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameNotFound creates a EdgeNodeStatusGetEdgeNodeStatusByNameNotFound with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameNotFound() *EdgeNodeStatusGetEdgeNodeStatusByNameNotFound {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameNotFound{}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] edgeNodeStatusGetEdgeNodeStatusByNameNotFound  %+v", 404, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError creates a EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError() *EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError{}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] edgeNodeStatusGetEdgeNodeStatusByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout creates a EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout() *EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout{}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] edgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusByNameDefault creates a EdgeNodeStatusGetEdgeNodeStatusByNameDefault with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusByNameDefault(code int) *EdgeNodeStatusGetEdgeNodeStatusByNameDefault {
	return &EdgeNodeStatusGetEdgeNodeStatusByNameDefault{
		_statusCode: code,
	}
}

/* EdgeNodeStatusGetEdgeNodeStatusByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeStatusGetEdgeNodeStatusByNameDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node status get edge node status by name default response
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/status][%d] EdgeNodeStatus_GetEdgeNodeStatusByName default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusByNameDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
