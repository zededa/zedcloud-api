// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeStatusQueryEdgeNodeStatusReader is a Reader for the EdgeNodeStatusQueryEdgeNodeStatus structure.
type EdgeNodeStatusQueryEdgeNodeStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeStatusQueryEdgeNodeStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeStatusQueryEdgeNodeStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeStatusQueryEdgeNodeStatusOK creates a EdgeNodeStatusQueryEdgeNodeStatusOK with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusOK() *EdgeNodeStatusQueryEdgeNodeStatusOK {
	return &EdgeNodeStatusQueryEdgeNodeStatusOK{}
}

/* EdgeNodeStatusQueryEdgeNodeStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeStatusQueryEdgeNodeStatusOK struct {
	Payload *swagger_models.DeviceStatusListMsg
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] edgeNodeStatusQueryEdgeNodeStatusOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusOK) GetPayload() *swagger_models.DeviceStatusListMsg {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.DeviceStatusListMsg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusQueryEdgeNodeStatusBadRequest creates a EdgeNodeStatusQueryEdgeNodeStatusBadRequest with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusBadRequest() *EdgeNodeStatusQueryEdgeNodeStatusBadRequest {
	return &EdgeNodeStatusQueryEdgeNodeStatusBadRequest{}
}

/* EdgeNodeStatusQueryEdgeNodeStatusBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type EdgeNodeStatusQueryEdgeNodeStatusBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] edgeNodeStatusQueryEdgeNodeStatusBadRequest  %+v", 400, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusQueryEdgeNodeStatusUnauthorized creates a EdgeNodeStatusQueryEdgeNodeStatusUnauthorized with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusUnauthorized() *EdgeNodeStatusQueryEdgeNodeStatusUnauthorized {
	return &EdgeNodeStatusQueryEdgeNodeStatusUnauthorized{}
}

/* EdgeNodeStatusQueryEdgeNodeStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeStatusQueryEdgeNodeStatusUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] edgeNodeStatusQueryEdgeNodeStatusUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusQueryEdgeNodeStatusForbidden creates a EdgeNodeStatusQueryEdgeNodeStatusForbidden with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusForbidden() *EdgeNodeStatusQueryEdgeNodeStatusForbidden {
	return &EdgeNodeStatusQueryEdgeNodeStatusForbidden{}
}

/* EdgeNodeStatusQueryEdgeNodeStatusForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeStatusQueryEdgeNodeStatusForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] edgeNodeStatusQueryEdgeNodeStatusForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusQueryEdgeNodeStatusInternalServerError creates a EdgeNodeStatusQueryEdgeNodeStatusInternalServerError with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusInternalServerError() *EdgeNodeStatusQueryEdgeNodeStatusInternalServerError {
	return &EdgeNodeStatusQueryEdgeNodeStatusInternalServerError{}
}

/* EdgeNodeStatusQueryEdgeNodeStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeStatusQueryEdgeNodeStatusInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] edgeNodeStatusQueryEdgeNodeStatusInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout creates a EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout() *EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout {
	return &EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout{}
}

/* EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] edgeNodeStatusQueryEdgeNodeStatusGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusQueryEdgeNodeStatusDefault creates a EdgeNodeStatusQueryEdgeNodeStatusDefault with default headers values
func NewEdgeNodeStatusQueryEdgeNodeStatusDefault(code int) *EdgeNodeStatusQueryEdgeNodeStatusDefault {
	return &EdgeNodeStatusQueryEdgeNodeStatusDefault{
		_statusCode: code,
	}
}

/* EdgeNodeStatusQueryEdgeNodeStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeStatusQueryEdgeNodeStatusDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node status query edge node status default response
func (o *EdgeNodeStatusQueryEdgeNodeStatusDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status][%d] EdgeNodeStatus_QueryEdgeNodeStatus default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeStatusQueryEdgeNodeStatusDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeStatusQueryEdgeNodeStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
