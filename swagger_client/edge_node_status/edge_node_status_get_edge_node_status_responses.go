// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeStatusGetEdgeNodeStatusReader is a Reader for the EdgeNodeStatusGetEdgeNodeStatus structure.
type EdgeNodeStatusGetEdgeNodeStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeStatusGetEdgeNodeStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeStatusGetEdgeNodeStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeStatusGetEdgeNodeStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeStatusGetEdgeNodeStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeStatusGetEdgeNodeStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeStatusGetEdgeNodeStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeStatusGetEdgeNodeStatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeStatusGetEdgeNodeStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeStatusGetEdgeNodeStatusOK creates a EdgeNodeStatusGetEdgeNodeStatusOK with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusOK() *EdgeNodeStatusGetEdgeNodeStatusOK {
	return &EdgeNodeStatusGetEdgeNodeStatusOK{}
}

/* EdgeNodeStatusGetEdgeNodeStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeStatusGetEdgeNodeStatusOK struct {
	Payload *swagger_models.DeviceStatusMsg
}

func (o *EdgeNodeStatusGetEdgeNodeStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] edgeNodeStatusGetEdgeNodeStatusOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusOK) GetPayload() *swagger_models.DeviceStatusMsg {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.DeviceStatusMsg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusUnauthorized creates a EdgeNodeStatusGetEdgeNodeStatusUnauthorized with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusUnauthorized() *EdgeNodeStatusGetEdgeNodeStatusUnauthorized {
	return &EdgeNodeStatusGetEdgeNodeStatusUnauthorized{}
}

/* EdgeNodeStatusGetEdgeNodeStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeStatusGetEdgeNodeStatusUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] edgeNodeStatusGetEdgeNodeStatusUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusForbidden creates a EdgeNodeStatusGetEdgeNodeStatusForbidden with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusForbidden() *EdgeNodeStatusGetEdgeNodeStatusForbidden {
	return &EdgeNodeStatusGetEdgeNodeStatusForbidden{}
}

/* EdgeNodeStatusGetEdgeNodeStatusForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeStatusGetEdgeNodeStatusForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] edgeNodeStatusGetEdgeNodeStatusForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusNotFound creates a EdgeNodeStatusGetEdgeNodeStatusNotFound with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusNotFound() *EdgeNodeStatusGetEdgeNodeStatusNotFound {
	return &EdgeNodeStatusGetEdgeNodeStatusNotFound{}
}

/* EdgeNodeStatusGetEdgeNodeStatusNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeStatusGetEdgeNodeStatusNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] edgeNodeStatusGetEdgeNodeStatusNotFound  %+v", 404, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusInternalServerError creates a EdgeNodeStatusGetEdgeNodeStatusInternalServerError with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusInternalServerError() *EdgeNodeStatusGetEdgeNodeStatusInternalServerError {
	return &EdgeNodeStatusGetEdgeNodeStatusInternalServerError{}
}

/* EdgeNodeStatusGetEdgeNodeStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeStatusGetEdgeNodeStatusInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] edgeNodeStatusGetEdgeNodeStatusInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusGatewayTimeout creates a EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusGatewayTimeout() *EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout {
	return &EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout{}
}

/* EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] edgeNodeStatusGetEdgeNodeStatusGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeStatusDefault creates a EdgeNodeStatusGetEdgeNodeStatusDefault with default headers values
func NewEdgeNodeStatusGetEdgeNodeStatusDefault(code int) *EdgeNodeStatusGetEdgeNodeStatusDefault {
	return &EdgeNodeStatusGetEdgeNodeStatusDefault{
		_statusCode: code,
	}
}

/* EdgeNodeStatusGetEdgeNodeStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeStatusGetEdgeNodeStatusDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node status get edge node status default response
func (o *EdgeNodeStatusGetEdgeNodeStatusDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeStatusGetEdgeNodeStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] EdgeNodeStatus_GetEdgeNodeStatus default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeStatusDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
