// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeNodeStatusGetEdgeNodeRawStatusReader is a Reader for the EdgeNodeStatusGetEdgeNodeRawStatus structure.
type EdgeNodeStatusGetEdgeNodeRawStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeStatusGetEdgeNodeRawStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeStatusGetEdgeNodeRawStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusOK creates a EdgeNodeStatusGetEdgeNodeRawStatusOK with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusOK() *EdgeNodeStatusGetEdgeNodeRawStatusOK {
	return &EdgeNodeStatusGetEdgeNodeRawStatusOK{}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusOK struct {
	Payload *swagger_models.DeviceRawMetrics
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] edgeNodeStatusGetEdgeNodeRawStatusOK  %+v", 200, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusOK) GetPayload() *swagger_models.DeviceRawMetrics {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.DeviceRawMetrics)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusUnauthorized creates a EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusUnauthorized() *EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized {
	return &EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized{}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] edgeNodeStatusGetEdgeNodeRawStatusUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusForbidden creates a EdgeNodeStatusGetEdgeNodeRawStatusForbidden with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusForbidden() *EdgeNodeStatusGetEdgeNodeRawStatusForbidden {
	return &EdgeNodeStatusGetEdgeNodeRawStatusForbidden{}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] edgeNodeStatusGetEdgeNodeRawStatusForbidden  %+v", 403, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusNotFound creates a EdgeNodeStatusGetEdgeNodeRawStatusNotFound with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusNotFound() *EdgeNodeStatusGetEdgeNodeRawStatusNotFound {
	return &EdgeNodeStatusGetEdgeNodeRawStatusNotFound{}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] edgeNodeStatusGetEdgeNodeRawStatusNotFound  %+v", 404, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusInternalServerError creates a EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusInternalServerError() *EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError {
	return &EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError{}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] edgeNodeStatusGetEdgeNodeRawStatusInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout creates a EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout() *EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout {
	return &EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout{}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] edgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeStatusGetEdgeNodeRawStatusDefault creates a EdgeNodeStatusGetEdgeNodeRawStatusDefault with default headers values
func NewEdgeNodeStatusGetEdgeNodeRawStatusDefault(code int) *EdgeNodeStatusGetEdgeNodeRawStatusDefault {
	return &EdgeNodeStatusGetEdgeNodeRawStatusDefault{
		_statusCode: code,
	}
}

/* EdgeNodeStatusGetEdgeNodeRawStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeStatusGetEdgeNodeRawStatusDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge node status get edge node raw status default response
func (o *EdgeNodeStatusGetEdgeNodeRawStatusDefault) Code() int {
	return o._statusCode
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status/metrics/raw][%d] EdgeNodeStatus_GetEdgeNodeRawStatus default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeNodeStatusGetEdgeNodeRawStatusDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeStatusGetEdgeNodeRawStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
