// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package cloud_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// CloudDiagnosticsGetCloudPolicyReader is a Reader for the CloudDiagnosticsGetCloudPolicy structure.
type CloudDiagnosticsGetCloudPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudDiagnosticsGetCloudPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudDiagnosticsGetCloudPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewCloudDiagnosticsGetCloudPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudDiagnosticsGetCloudPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCloudDiagnosticsGetCloudPolicyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCloudDiagnosticsGetCloudPolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCloudDiagnosticsGetCloudPolicyOK creates a CloudDiagnosticsGetCloudPolicyOK with default headers values
func NewCloudDiagnosticsGetCloudPolicyOK() *CloudDiagnosticsGetCloudPolicyOK {
	return &CloudDiagnosticsGetCloudPolicyOK{}
}

/*
CloudDiagnosticsGetCloudPolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type CloudDiagnosticsGetCloudPolicyOK struct {
	Payload *swagger_models.PolicyDocVersionResp
}

// IsSuccess returns true when this cloud diagnostics get cloud policy o k response has a 2xx status code
func (o *CloudDiagnosticsGetCloudPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud diagnostics get cloud policy o k response has a 3xx status code
func (o *CloudDiagnosticsGetCloudPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics get cloud policy o k response has a 4xx status code
func (o *CloudDiagnosticsGetCloudPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud diagnostics get cloud policy o k response has a 5xx status code
func (o *CloudDiagnosticsGetCloudPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud diagnostics get cloud policy o k response a status code equal to that given
func (o *CloudDiagnosticsGetCloudPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud diagnostics get cloud policy o k response
func (o *CloudDiagnosticsGetCloudPolicyOK) Code() int {
	return 200
}

func (o *CloudDiagnosticsGetCloudPolicyOK) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyOK  %+v", 200, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyOK) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyOK  %+v", 200, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyOK) GetPayload() *swagger_models.PolicyDocVersionResp {
	return o.Payload
}

func (o *CloudDiagnosticsGetCloudPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.PolicyDocVersionResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsGetCloudPolicyNotFound creates a CloudDiagnosticsGetCloudPolicyNotFound with default headers values
func NewCloudDiagnosticsGetCloudPolicyNotFound() *CloudDiagnosticsGetCloudPolicyNotFound {
	return &CloudDiagnosticsGetCloudPolicyNotFound{}
}

/*
CloudDiagnosticsGetCloudPolicyNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type CloudDiagnosticsGetCloudPolicyNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this cloud diagnostics get cloud policy not found response has a 2xx status code
func (o *CloudDiagnosticsGetCloudPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud diagnostics get cloud policy not found response has a 3xx status code
func (o *CloudDiagnosticsGetCloudPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics get cloud policy not found response has a 4xx status code
func (o *CloudDiagnosticsGetCloudPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud diagnostics get cloud policy not found response has a 5xx status code
func (o *CloudDiagnosticsGetCloudPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud diagnostics get cloud policy not found response a status code equal to that given
func (o *CloudDiagnosticsGetCloudPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cloud diagnostics get cloud policy not found response
func (o *CloudDiagnosticsGetCloudPolicyNotFound) Code() int {
	return 404
}

func (o *CloudDiagnosticsGetCloudPolicyNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyNotFound  %+v", 404, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyNotFound) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyNotFound  %+v", 404, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CloudDiagnosticsGetCloudPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsGetCloudPolicyInternalServerError creates a CloudDiagnosticsGetCloudPolicyInternalServerError with default headers values
func NewCloudDiagnosticsGetCloudPolicyInternalServerError() *CloudDiagnosticsGetCloudPolicyInternalServerError {
	return &CloudDiagnosticsGetCloudPolicyInternalServerError{}
}

/*
CloudDiagnosticsGetCloudPolicyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type CloudDiagnosticsGetCloudPolicyInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this cloud diagnostics get cloud policy internal server error response has a 2xx status code
func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud diagnostics get cloud policy internal server error response has a 3xx status code
func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics get cloud policy internal server error response has a 4xx status code
func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud diagnostics get cloud policy internal server error response has a 5xx status code
func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud diagnostics get cloud policy internal server error response a status code equal to that given
func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud diagnostics get cloud policy internal server error response
func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) Code() int {
	return 500
}

func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CloudDiagnosticsGetCloudPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsGetCloudPolicyGatewayTimeout creates a CloudDiagnosticsGetCloudPolicyGatewayTimeout with default headers values
func NewCloudDiagnosticsGetCloudPolicyGatewayTimeout() *CloudDiagnosticsGetCloudPolicyGatewayTimeout {
	return &CloudDiagnosticsGetCloudPolicyGatewayTimeout{}
}

/*
CloudDiagnosticsGetCloudPolicyGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type CloudDiagnosticsGetCloudPolicyGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this cloud diagnostics get cloud policy gateway timeout response has a 2xx status code
func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud diagnostics get cloud policy gateway timeout response has a 3xx status code
func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics get cloud policy gateway timeout response has a 4xx status code
func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud diagnostics get cloud policy gateway timeout response has a 5xx status code
func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud diagnostics get cloud policy gateway timeout response a status code equal to that given
func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the cloud diagnostics get cloud policy gateway timeout response
func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) Code() int {
	return 504
}

func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] cloudDiagnosticsGetCloudPolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CloudDiagnosticsGetCloudPolicyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsGetCloudPolicyDefault creates a CloudDiagnosticsGetCloudPolicyDefault with default headers values
func NewCloudDiagnosticsGetCloudPolicyDefault(code int) *CloudDiagnosticsGetCloudPolicyDefault {
	return &CloudDiagnosticsGetCloudPolicyDefault{
		_statusCode: code,
	}
}

/*
CloudDiagnosticsGetCloudPolicyDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CloudDiagnosticsGetCloudPolicyDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// IsSuccess returns true when this cloud diagnostics get cloud policy default response has a 2xx status code
func (o *CloudDiagnosticsGetCloudPolicyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cloud diagnostics get cloud policy default response has a 3xx status code
func (o *CloudDiagnosticsGetCloudPolicyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cloud diagnostics get cloud policy default response has a 4xx status code
func (o *CloudDiagnosticsGetCloudPolicyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cloud diagnostics get cloud policy default response has a 5xx status code
func (o *CloudDiagnosticsGetCloudPolicyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cloud diagnostics get cloud policy default response a status code equal to that given
func (o *CloudDiagnosticsGetCloudPolicyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the cloud diagnostics get cloud policy default response
func (o *CloudDiagnosticsGetCloudPolicyDefault) Code() int {
	return o._statusCode
}

func (o *CloudDiagnosticsGetCloudPolicyDefault) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] CloudDiagnostics_GetCloudPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyDefault) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies/name/{policy}][%d] CloudDiagnostics_GetCloudPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *CloudDiagnosticsGetCloudPolicyDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *CloudDiagnosticsGetCloudPolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
