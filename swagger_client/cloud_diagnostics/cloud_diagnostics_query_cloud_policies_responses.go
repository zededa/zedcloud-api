// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package cloud_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// CloudDiagnosticsQueryCloudPoliciesReader is a Reader for the CloudDiagnosticsQueryCloudPolicies structure.
type CloudDiagnosticsQueryCloudPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudDiagnosticsQueryCloudPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudDiagnosticsQueryCloudPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewCloudDiagnosticsQueryCloudPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCloudDiagnosticsQueryCloudPoliciesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCloudDiagnosticsQueryCloudPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCloudDiagnosticsQueryCloudPoliciesOK creates a CloudDiagnosticsQueryCloudPoliciesOK with default headers values
func NewCloudDiagnosticsQueryCloudPoliciesOK() *CloudDiagnosticsQueryCloudPoliciesOK {
	return &CloudDiagnosticsQueryCloudPoliciesOK{}
}

/*
CloudDiagnosticsQueryCloudPoliciesOK describes a response with status code 200, with default header values.

A successful response.
*/
type CloudDiagnosticsQueryCloudPoliciesOK struct {
	Payload *swagger_models.PolicyDocVersionResp
}

// IsSuccess returns true when this cloud diagnostics query cloud policies o k response has a 2xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud diagnostics query cloud policies o k response has a 3xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics query cloud policies o k response has a 4xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud diagnostics query cloud policies o k response has a 5xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud diagnostics query cloud policies o k response a status code equal to that given
func (o *CloudDiagnosticsQueryCloudPoliciesOK) IsCode(code int) bool {
	return code == 200
}

func (o *CloudDiagnosticsQueryCloudPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] cloudDiagnosticsQueryCloudPoliciesOK  %+v", 200, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesOK) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] cloudDiagnosticsQueryCloudPoliciesOK  %+v", 200, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesOK) GetPayload() *swagger_models.PolicyDocVersionResp {
	return o.Payload
}

func (o *CloudDiagnosticsQueryCloudPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.PolicyDocVersionResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsQueryCloudPoliciesInternalServerError creates a CloudDiagnosticsQueryCloudPoliciesInternalServerError with default headers values
func NewCloudDiagnosticsQueryCloudPoliciesInternalServerError() *CloudDiagnosticsQueryCloudPoliciesInternalServerError {
	return &CloudDiagnosticsQueryCloudPoliciesInternalServerError{}
}

/*
CloudDiagnosticsQueryCloudPoliciesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type CloudDiagnosticsQueryCloudPoliciesInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this cloud diagnostics query cloud policies internal server error response has a 2xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud diagnostics query cloud policies internal server error response has a 3xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics query cloud policies internal server error response has a 4xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud diagnostics query cloud policies internal server error response has a 5xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud diagnostics query cloud policies internal server error response a status code equal to that given
func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] cloudDiagnosticsQueryCloudPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] cloudDiagnosticsQueryCloudPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CloudDiagnosticsQueryCloudPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsQueryCloudPoliciesGatewayTimeout creates a CloudDiagnosticsQueryCloudPoliciesGatewayTimeout with default headers values
func NewCloudDiagnosticsQueryCloudPoliciesGatewayTimeout() *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout {
	return &CloudDiagnosticsQueryCloudPoliciesGatewayTimeout{}
}

/*
CloudDiagnosticsQueryCloudPoliciesGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type CloudDiagnosticsQueryCloudPoliciesGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this cloud diagnostics query cloud policies gateway timeout response has a 2xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud diagnostics query cloud policies gateway timeout response has a 3xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud diagnostics query cloud policies gateway timeout response has a 4xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud diagnostics query cloud policies gateway timeout response has a 5xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud diagnostics query cloud policies gateway timeout response a status code equal to that given
func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] cloudDiagnosticsQueryCloudPoliciesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] cloudDiagnosticsQueryCloudPoliciesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CloudDiagnosticsQueryCloudPoliciesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudDiagnosticsQueryCloudPoliciesDefault creates a CloudDiagnosticsQueryCloudPoliciesDefault with default headers values
func NewCloudDiagnosticsQueryCloudPoliciesDefault(code int) *CloudDiagnosticsQueryCloudPoliciesDefault {
	return &CloudDiagnosticsQueryCloudPoliciesDefault{
		_statusCode: code,
	}
}

/*
CloudDiagnosticsQueryCloudPoliciesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CloudDiagnosticsQueryCloudPoliciesDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the cloud diagnostics query cloud policies default response
func (o *CloudDiagnosticsQueryCloudPoliciesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this cloud diagnostics query cloud policies default response has a 2xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cloud diagnostics query cloud policies default response has a 3xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cloud diagnostics query cloud policies default response has a 4xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cloud diagnostics query cloud policies default response has a 5xx status code
func (o *CloudDiagnosticsQueryCloudPoliciesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cloud diagnostics query cloud policies default response a status code equal to that given
func (o *CloudDiagnosticsQueryCloudPoliciesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CloudDiagnosticsQueryCloudPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] CloudDiagnostics_QueryCloudPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesDefault) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] CloudDiagnostics_QueryCloudPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *CloudDiagnosticsQueryCloudPoliciesDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *CloudDiagnosticsQueryCloudPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
