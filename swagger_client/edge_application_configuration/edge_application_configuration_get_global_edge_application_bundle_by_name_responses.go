// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameReader is a Reader for the EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByName structure.
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK() *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK{}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK struct {
	Payload *swagger_models.App
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] edgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK  %+v", 200, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK) GetPayload() *swagger_models.App {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized() *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized{}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] edgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden() *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden{}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] edgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden  %+v", 403, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound() *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound{}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] edgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound  %+v", 404, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError() *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError{}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] edgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout() *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout{}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] edgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault creates a EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault with default headers values
func NewEdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault(code int) *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault {
	return &EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault{
		_statusCode: code,
	}
}

/* EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge application configuration get global edge application bundle by name default response
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault) Code() int {
	return o._statusCode
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] EdgeApplicationConfiguration_GetGlobalEdgeApplicationBundleByName default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeApplicationConfigurationGetGlobalEdgeApplicationBundleByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
