// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// IdentityAccessManagementGetRealmReader is a Reader for the IdentityAccessManagementGetRealm structure.
type IdentityAccessManagementGetRealmReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetRealmReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetRealmOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetRealmUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetRealmForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementGetRealmNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetRealmInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetRealmGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetRealmDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetRealmOK creates a IdentityAccessManagementGetRealmOK with default headers values
func NewIdentityAccessManagementGetRealmOK() *IdentityAccessManagementGetRealmOK {
	return &IdentityAccessManagementGetRealmOK{}
}

/* IdentityAccessManagementGetRealmOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetRealmOK struct {
	Payload *swagger_models.CrudResponseRead
}

func (o *IdentityAccessManagementGetRealmOK) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] identityAccessManagementGetRealmOK  %+v", 200, o.Payload)
}
func (o *IdentityAccessManagementGetRealmOK) GetPayload() *swagger_models.CrudResponseRead {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponseRead)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRealmUnauthorized creates a IdentityAccessManagementGetRealmUnauthorized with default headers values
func NewIdentityAccessManagementGetRealmUnauthorized() *IdentityAccessManagementGetRealmUnauthorized {
	return &IdentityAccessManagementGetRealmUnauthorized{}
}

/* IdentityAccessManagementGetRealmUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetRealmUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetRealmUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] identityAccessManagementGetRealmUnauthorized  %+v", 401, o.Payload)
}
func (o *IdentityAccessManagementGetRealmUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRealmForbidden creates a IdentityAccessManagementGetRealmForbidden with default headers values
func NewIdentityAccessManagementGetRealmForbidden() *IdentityAccessManagementGetRealmForbidden {
	return &IdentityAccessManagementGetRealmForbidden{}
}

/* IdentityAccessManagementGetRealmForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetRealmForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetRealmForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] identityAccessManagementGetRealmForbidden  %+v", 403, o.Payload)
}
func (o *IdentityAccessManagementGetRealmForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRealmNotFound creates a IdentityAccessManagementGetRealmNotFound with default headers values
func NewIdentityAccessManagementGetRealmNotFound() *IdentityAccessManagementGetRealmNotFound {
	return &IdentityAccessManagementGetRealmNotFound{}
}

/* IdentityAccessManagementGetRealmNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementGetRealmNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetRealmNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] identityAccessManagementGetRealmNotFound  %+v", 404, o.Payload)
}
func (o *IdentityAccessManagementGetRealmNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRealmInternalServerError creates a IdentityAccessManagementGetRealmInternalServerError with default headers values
func NewIdentityAccessManagementGetRealmInternalServerError() *IdentityAccessManagementGetRealmInternalServerError {
	return &IdentityAccessManagementGetRealmInternalServerError{}
}

/* IdentityAccessManagementGetRealmInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetRealmInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetRealmInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] identityAccessManagementGetRealmInternalServerError  %+v", 500, o.Payload)
}
func (o *IdentityAccessManagementGetRealmInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRealmGatewayTimeout creates a IdentityAccessManagementGetRealmGatewayTimeout with default headers values
func NewIdentityAccessManagementGetRealmGatewayTimeout() *IdentityAccessManagementGetRealmGatewayTimeout {
	return &IdentityAccessManagementGetRealmGatewayTimeout{}
}

/* IdentityAccessManagementGetRealmGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetRealmGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetRealmGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] identityAccessManagementGetRealmGatewayTimeout  %+v", 504, o.Payload)
}
func (o *IdentityAccessManagementGetRealmGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRealmDefault creates a IdentityAccessManagementGetRealmDefault with default headers values
func NewIdentityAccessManagementGetRealmDefault(code int) *IdentityAccessManagementGetRealmDefault {
	return &IdentityAccessManagementGetRealmDefault{
		_statusCode: code,
	}
}

/* IdentityAccessManagementGetRealmDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetRealmDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the identity access management get realm default response
func (o *IdentityAccessManagementGetRealmDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetRealmDefault) Error() string {
	return fmt.Sprintf("[GET /v1/realms/id/{id}][%d] IdentityAccessManagement_GetRealm default  %+v", o._statusCode, o.Payload)
}
func (o *IdentityAccessManagementGetRealmDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetRealmDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
