// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// IdentityAccessManagementDeleteAuthProfileReader is a Reader for the IdentityAccessManagementDeleteAuthProfile structure.
type IdentityAccessManagementDeleteAuthProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementDeleteAuthProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementDeleteAuthProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementDeleteAuthProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementDeleteAuthProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementDeleteAuthProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementDeleteAuthProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementDeleteAuthProfileGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementDeleteAuthProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementDeleteAuthProfileOK creates a IdentityAccessManagementDeleteAuthProfileOK with default headers values
func NewIdentityAccessManagementDeleteAuthProfileOK() *IdentityAccessManagementDeleteAuthProfileOK {
	return &IdentityAccessManagementDeleteAuthProfileOK{}
}

/* IdentityAccessManagementDeleteAuthProfileOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementDeleteAuthProfileOK struct {
	Payload *swagger_models.CrudResponse
}

func (o *IdentityAccessManagementDeleteAuthProfileOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] identityAccessManagementDeleteAuthProfileOK  %+v", 200, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileOK) GetPayload() *swagger_models.CrudResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteAuthProfileUnauthorized creates a IdentityAccessManagementDeleteAuthProfileUnauthorized with default headers values
func NewIdentityAccessManagementDeleteAuthProfileUnauthorized() *IdentityAccessManagementDeleteAuthProfileUnauthorized {
	return &IdentityAccessManagementDeleteAuthProfileUnauthorized{}
}

/* IdentityAccessManagementDeleteAuthProfileUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementDeleteAuthProfileUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementDeleteAuthProfileUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] identityAccessManagementDeleteAuthProfileUnauthorized  %+v", 401, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteAuthProfileForbidden creates a IdentityAccessManagementDeleteAuthProfileForbidden with default headers values
func NewIdentityAccessManagementDeleteAuthProfileForbidden() *IdentityAccessManagementDeleteAuthProfileForbidden {
	return &IdentityAccessManagementDeleteAuthProfileForbidden{}
}

/* IdentityAccessManagementDeleteAuthProfileForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementDeleteAuthProfileForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementDeleteAuthProfileForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] identityAccessManagementDeleteAuthProfileForbidden  %+v", 403, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteAuthProfileNotFound creates a IdentityAccessManagementDeleteAuthProfileNotFound with default headers values
func NewIdentityAccessManagementDeleteAuthProfileNotFound() *IdentityAccessManagementDeleteAuthProfileNotFound {
	return &IdentityAccessManagementDeleteAuthProfileNotFound{}
}

/* IdentityAccessManagementDeleteAuthProfileNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementDeleteAuthProfileNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementDeleteAuthProfileNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] identityAccessManagementDeleteAuthProfileNotFound  %+v", 404, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteAuthProfileInternalServerError creates a IdentityAccessManagementDeleteAuthProfileInternalServerError with default headers values
func NewIdentityAccessManagementDeleteAuthProfileInternalServerError() *IdentityAccessManagementDeleteAuthProfileInternalServerError {
	return &IdentityAccessManagementDeleteAuthProfileInternalServerError{}
}

/* IdentityAccessManagementDeleteAuthProfileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementDeleteAuthProfileInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementDeleteAuthProfileInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] identityAccessManagementDeleteAuthProfileInternalServerError  %+v", 500, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteAuthProfileGatewayTimeout creates a IdentityAccessManagementDeleteAuthProfileGatewayTimeout with default headers values
func NewIdentityAccessManagementDeleteAuthProfileGatewayTimeout() *IdentityAccessManagementDeleteAuthProfileGatewayTimeout {
	return &IdentityAccessManagementDeleteAuthProfileGatewayTimeout{}
}

/* IdentityAccessManagementDeleteAuthProfileGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementDeleteAuthProfileGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementDeleteAuthProfileGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] identityAccessManagementDeleteAuthProfileGatewayTimeout  %+v", 504, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteAuthProfileDefault creates a IdentityAccessManagementDeleteAuthProfileDefault with default headers values
func NewIdentityAccessManagementDeleteAuthProfileDefault(code int) *IdentityAccessManagementDeleteAuthProfileDefault {
	return &IdentityAccessManagementDeleteAuthProfileDefault{
		_statusCode: code,
	}
}

/* IdentityAccessManagementDeleteAuthProfileDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementDeleteAuthProfileDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the identity access management delete auth profile default response
func (o *IdentityAccessManagementDeleteAuthProfileDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementDeleteAuthProfileDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] IdentityAccessManagement_DeleteAuthProfile default  %+v", o._statusCode, o.Payload)
}
func (o *IdentityAccessManagementDeleteAuthProfileDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteAuthProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
