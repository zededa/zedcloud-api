// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// IdentityAccessManagementGetUserSessionReader is a Reader for the IdentityAccessManagementGetUserSession structure.
type IdentityAccessManagementGetUserSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetUserSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetUserSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetUserSessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetUserSessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetUserSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetUserSessionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetUserSessionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetUserSessionOK creates a IdentityAccessManagementGetUserSessionOK with default headers values
func NewIdentityAccessManagementGetUserSessionOK() *IdentityAccessManagementGetUserSessionOK {
	return &IdentityAccessManagementGetUserSessionOK{}
}

/* IdentityAccessManagementGetUserSessionOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetUserSessionOK struct {
	Payload *swagger_models.AAAFrontendSessionDetailsResponse
}

func (o *IdentityAccessManagementGetUserSessionOK) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionOK  %+v", 200, o.Payload)
}
func (o *IdentityAccessManagementGetUserSessionOK) GetPayload() *swagger_models.AAAFrontendSessionDetailsResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.AAAFrontendSessionDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionUnauthorized creates a IdentityAccessManagementGetUserSessionUnauthorized with default headers values
func NewIdentityAccessManagementGetUserSessionUnauthorized() *IdentityAccessManagementGetUserSessionUnauthorized {
	return &IdentityAccessManagementGetUserSessionUnauthorized{}
}

/* IdentityAccessManagementGetUserSessionUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetUserSessionUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetUserSessionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionUnauthorized  %+v", 401, o.Payload)
}
func (o *IdentityAccessManagementGetUserSessionUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionForbidden creates a IdentityAccessManagementGetUserSessionForbidden with default headers values
func NewIdentityAccessManagementGetUserSessionForbidden() *IdentityAccessManagementGetUserSessionForbidden {
	return &IdentityAccessManagementGetUserSessionForbidden{}
}

/* IdentityAccessManagementGetUserSessionForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetUserSessionForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetUserSessionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionForbidden  %+v", 403, o.Payload)
}
func (o *IdentityAccessManagementGetUserSessionForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionInternalServerError creates a IdentityAccessManagementGetUserSessionInternalServerError with default headers values
func NewIdentityAccessManagementGetUserSessionInternalServerError() *IdentityAccessManagementGetUserSessionInternalServerError {
	return &IdentityAccessManagementGetUserSessionInternalServerError{}
}

/* IdentityAccessManagementGetUserSessionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetUserSessionInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetUserSessionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionInternalServerError  %+v", 500, o.Payload)
}
func (o *IdentityAccessManagementGetUserSessionInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionGatewayTimeout creates a IdentityAccessManagementGetUserSessionGatewayTimeout with default headers values
func NewIdentityAccessManagementGetUserSessionGatewayTimeout() *IdentityAccessManagementGetUserSessionGatewayTimeout {
	return &IdentityAccessManagementGetUserSessionGatewayTimeout{}
}

/* IdentityAccessManagementGetUserSessionGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetUserSessionGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionGatewayTimeout  %+v", 504, o.Payload)
}
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionDefault creates a IdentityAccessManagementGetUserSessionDefault with default headers values
func NewIdentityAccessManagementGetUserSessionDefault(code int) *IdentityAccessManagementGetUserSessionDefault {
	return &IdentityAccessManagementGetUserSessionDefault{
		_statusCode: code,
	}
}

/* IdentityAccessManagementGetUserSessionDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetUserSessionDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the identity access management get user session default response
func (o *IdentityAccessManagementGetUserSessionDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetUserSessionDefault) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] IdentityAccessManagement_GetUserSession default  %+v", o._statusCode, o.Payload)
}
func (o *IdentityAccessManagementGetUserSessionDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
