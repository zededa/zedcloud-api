// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// IdentityAccessManagementQueryUserSessionsReader is a Reader for the IdentityAccessManagementQueryUserSessions structure.
type IdentityAccessManagementQueryUserSessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementQueryUserSessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementQueryUserSessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementQueryUserSessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementQueryUserSessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementQueryUserSessionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementQueryUserSessionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementQueryUserSessionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementQueryUserSessionsOK creates a IdentityAccessManagementQueryUserSessionsOK with default headers values
func NewIdentityAccessManagementQueryUserSessionsOK() *IdentityAccessManagementQueryUserSessionsOK {
	return &IdentityAccessManagementQueryUserSessionsOK{}
}

/* IdentityAccessManagementQueryUserSessionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementQueryUserSessionsOK struct {
	Payload *swagger_models.AAASuccessResponseQueryAllSessionDetails
}

func (o *IdentityAccessManagementQueryUserSessionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/sessions][%d] identityAccessManagementQueryUserSessionsOK  %+v", 200, o.Payload)
}
func (o *IdentityAccessManagementQueryUserSessionsOK) GetPayload() *swagger_models.AAASuccessResponseQueryAllSessionDetails {
	return o.Payload
}

func (o *IdentityAccessManagementQueryUserSessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.AAASuccessResponseQueryAllSessionDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryUserSessionsUnauthorized creates a IdentityAccessManagementQueryUserSessionsUnauthorized with default headers values
func NewIdentityAccessManagementQueryUserSessionsUnauthorized() *IdentityAccessManagementQueryUserSessionsUnauthorized {
	return &IdentityAccessManagementQueryUserSessionsUnauthorized{}
}

/* IdentityAccessManagementQueryUserSessionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementQueryUserSessionsUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementQueryUserSessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/sessions][%d] identityAccessManagementQueryUserSessionsUnauthorized  %+v", 401, o.Payload)
}
func (o *IdentityAccessManagementQueryUserSessionsUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryUserSessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryUserSessionsForbidden creates a IdentityAccessManagementQueryUserSessionsForbidden with default headers values
func NewIdentityAccessManagementQueryUserSessionsForbidden() *IdentityAccessManagementQueryUserSessionsForbidden {
	return &IdentityAccessManagementQueryUserSessionsForbidden{}
}

/* IdentityAccessManagementQueryUserSessionsForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementQueryUserSessionsForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementQueryUserSessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/sessions][%d] identityAccessManagementQueryUserSessionsForbidden  %+v", 403, o.Payload)
}
func (o *IdentityAccessManagementQueryUserSessionsForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryUserSessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryUserSessionsInternalServerError creates a IdentityAccessManagementQueryUserSessionsInternalServerError with default headers values
func NewIdentityAccessManagementQueryUserSessionsInternalServerError() *IdentityAccessManagementQueryUserSessionsInternalServerError {
	return &IdentityAccessManagementQueryUserSessionsInternalServerError{}
}

/* IdentityAccessManagementQueryUserSessionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementQueryUserSessionsInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementQueryUserSessionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sessions][%d] identityAccessManagementQueryUserSessionsInternalServerError  %+v", 500, o.Payload)
}
func (o *IdentityAccessManagementQueryUserSessionsInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryUserSessionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryUserSessionsGatewayTimeout creates a IdentityAccessManagementQueryUserSessionsGatewayTimeout with default headers values
func NewIdentityAccessManagementQueryUserSessionsGatewayTimeout() *IdentityAccessManagementQueryUserSessionsGatewayTimeout {
	return &IdentityAccessManagementQueryUserSessionsGatewayTimeout{}
}

/* IdentityAccessManagementQueryUserSessionsGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementQueryUserSessionsGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementQueryUserSessionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/sessions][%d] identityAccessManagementQueryUserSessionsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *IdentityAccessManagementQueryUserSessionsGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryUserSessionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryUserSessionsDefault creates a IdentityAccessManagementQueryUserSessionsDefault with default headers values
func NewIdentityAccessManagementQueryUserSessionsDefault(code int) *IdentityAccessManagementQueryUserSessionsDefault {
	return &IdentityAccessManagementQueryUserSessionsDefault{
		_statusCode: code,
	}
}

/* IdentityAccessManagementQueryUserSessionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementQueryUserSessionsDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the identity access management query user sessions default response
func (o *IdentityAccessManagementQueryUserSessionsDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementQueryUserSessionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/sessions][%d] IdentityAccessManagement_QueryUserSessions default  %+v", o._statusCode, o.Payload)
}
func (o *IdentityAccessManagementQueryUserSessionsDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementQueryUserSessionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
