// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// IdentityAccessManagementGetEnterpriseByNameReader is a Reader for the IdentityAccessManagementGetEnterpriseByName structure.
type IdentityAccessManagementGetEnterpriseByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetEnterpriseByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetEnterpriseByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetEnterpriseByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetEnterpriseByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementGetEnterpriseByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetEnterpriseByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetEnterpriseByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetEnterpriseByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetEnterpriseByNameOK creates a IdentityAccessManagementGetEnterpriseByNameOK with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameOK() *IdentityAccessManagementGetEnterpriseByNameOK {
	return &IdentityAccessManagementGetEnterpriseByNameOK{}
}

/* IdentityAccessManagementGetEnterpriseByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetEnterpriseByNameOK struct {
	Payload *swagger_models.CrudResponseRead
}

func (o *IdentityAccessManagementGetEnterpriseByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] identityAccessManagementGetEnterpriseByNameOK  %+v", 200, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameOK) GetPayload() *swagger_models.CrudResponseRead {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponseRead)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetEnterpriseByNameUnauthorized creates a IdentityAccessManagementGetEnterpriseByNameUnauthorized with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameUnauthorized() *IdentityAccessManagementGetEnterpriseByNameUnauthorized {
	return &IdentityAccessManagementGetEnterpriseByNameUnauthorized{}
}

/* IdentityAccessManagementGetEnterpriseByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetEnterpriseByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetEnterpriseByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] identityAccessManagementGetEnterpriseByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetEnterpriseByNameForbidden creates a IdentityAccessManagementGetEnterpriseByNameForbidden with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameForbidden() *IdentityAccessManagementGetEnterpriseByNameForbidden {
	return &IdentityAccessManagementGetEnterpriseByNameForbidden{}
}

/* IdentityAccessManagementGetEnterpriseByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetEnterpriseByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetEnterpriseByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] identityAccessManagementGetEnterpriseByNameForbidden  %+v", 403, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetEnterpriseByNameNotFound creates a IdentityAccessManagementGetEnterpriseByNameNotFound with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameNotFound() *IdentityAccessManagementGetEnterpriseByNameNotFound {
	return &IdentityAccessManagementGetEnterpriseByNameNotFound{}
}

/* IdentityAccessManagementGetEnterpriseByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementGetEnterpriseByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetEnterpriseByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] identityAccessManagementGetEnterpriseByNameNotFound  %+v", 404, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetEnterpriseByNameInternalServerError creates a IdentityAccessManagementGetEnterpriseByNameInternalServerError with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameInternalServerError() *IdentityAccessManagementGetEnterpriseByNameInternalServerError {
	return &IdentityAccessManagementGetEnterpriseByNameInternalServerError{}
}

/* IdentityAccessManagementGetEnterpriseByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetEnterpriseByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetEnterpriseByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] identityAccessManagementGetEnterpriseByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetEnterpriseByNameGatewayTimeout creates a IdentityAccessManagementGetEnterpriseByNameGatewayTimeout with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameGatewayTimeout() *IdentityAccessManagementGetEnterpriseByNameGatewayTimeout {
	return &IdentityAccessManagementGetEnterpriseByNameGatewayTimeout{}
}

/* IdentityAccessManagementGetEnterpriseByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetEnterpriseByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *IdentityAccessManagementGetEnterpriseByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] identityAccessManagementGetEnterpriseByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetEnterpriseByNameDefault creates a IdentityAccessManagementGetEnterpriseByNameDefault with default headers values
func NewIdentityAccessManagementGetEnterpriseByNameDefault(code int) *IdentityAccessManagementGetEnterpriseByNameDefault {
	return &IdentityAccessManagementGetEnterpriseByNameDefault{
		_statusCode: code,
	}
}

/* IdentityAccessManagementGetEnterpriseByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetEnterpriseByNameDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the identity access management get enterprise by name default response
func (o *IdentityAccessManagementGetEnterpriseByNameDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetEnterpriseByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/enterprises/name/{name}][%d] IdentityAccessManagement_GetEnterpriseByName default  %+v", o._statusCode, o.Payload)
}
func (o *IdentityAccessManagementGetEnterpriseByNameDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetEnterpriseByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
