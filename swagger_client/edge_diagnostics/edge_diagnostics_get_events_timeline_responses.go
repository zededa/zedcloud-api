// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// EdgeDiagnosticsGetEventsTimelineReader is a Reader for the EdgeDiagnosticsGetEventsTimeline structure.
type EdgeDiagnosticsGetEventsTimelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeDiagnosticsGetEventsTimelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeDiagnosticsGetEventsTimelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEdgeDiagnosticsGetEventsTimelineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEdgeDiagnosticsGetEventsTimelineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeDiagnosticsGetEventsTimelineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeDiagnosticsGetEventsTimelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeDiagnosticsGetEventsTimelineGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeDiagnosticsGetEventsTimelineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeDiagnosticsGetEventsTimelineOK creates a EdgeDiagnosticsGetEventsTimelineOK with default headers values
func NewEdgeDiagnosticsGetEventsTimelineOK() *EdgeDiagnosticsGetEventsTimelineOK {
	return &EdgeDiagnosticsGetEventsTimelineOK{}
}

/* EdgeDiagnosticsGetEventsTimelineOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeDiagnosticsGetEventsTimelineOK struct {
	Payload *swagger_models.EventQueryResponse
}

func (o *EdgeDiagnosticsGetEventsTimelineOK) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] edgeDiagnosticsGetEventsTimelineOK  %+v", 200, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineOK) GetPayload() *swagger_models.EventQueryResponse {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.EventQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeDiagnosticsGetEventsTimelineBadRequest creates a EdgeDiagnosticsGetEventsTimelineBadRequest with default headers values
func NewEdgeDiagnosticsGetEventsTimelineBadRequest() *EdgeDiagnosticsGetEventsTimelineBadRequest {
	return &EdgeDiagnosticsGetEventsTimelineBadRequest{}
}

/* EdgeDiagnosticsGetEventsTimelineBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type EdgeDiagnosticsGetEventsTimelineBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeDiagnosticsGetEventsTimelineBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] edgeDiagnosticsGetEventsTimelineBadRequest  %+v", 400, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeDiagnosticsGetEventsTimelineUnauthorized creates a EdgeDiagnosticsGetEventsTimelineUnauthorized with default headers values
func NewEdgeDiagnosticsGetEventsTimelineUnauthorized() *EdgeDiagnosticsGetEventsTimelineUnauthorized {
	return &EdgeDiagnosticsGetEventsTimelineUnauthorized{}
}

/* EdgeDiagnosticsGetEventsTimelineUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeDiagnosticsGetEventsTimelineUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeDiagnosticsGetEventsTimelineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] edgeDiagnosticsGetEventsTimelineUnauthorized  %+v", 401, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeDiagnosticsGetEventsTimelineForbidden creates a EdgeDiagnosticsGetEventsTimelineForbidden with default headers values
func NewEdgeDiagnosticsGetEventsTimelineForbidden() *EdgeDiagnosticsGetEventsTimelineForbidden {
	return &EdgeDiagnosticsGetEventsTimelineForbidden{}
}

/* EdgeDiagnosticsGetEventsTimelineForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-app level access permission for the operation or does not have access scope to the project.
*/
type EdgeDiagnosticsGetEventsTimelineForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeDiagnosticsGetEventsTimelineForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] edgeDiagnosticsGetEventsTimelineForbidden  %+v", 403, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeDiagnosticsGetEventsTimelineInternalServerError creates a EdgeDiagnosticsGetEventsTimelineInternalServerError with default headers values
func NewEdgeDiagnosticsGetEventsTimelineInternalServerError() *EdgeDiagnosticsGetEventsTimelineInternalServerError {
	return &EdgeDiagnosticsGetEventsTimelineInternalServerError{}
}

/* EdgeDiagnosticsGetEventsTimelineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeDiagnosticsGetEventsTimelineInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeDiagnosticsGetEventsTimelineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] edgeDiagnosticsGetEventsTimelineInternalServerError  %+v", 500, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeDiagnosticsGetEventsTimelineGatewayTimeout creates a EdgeDiagnosticsGetEventsTimelineGatewayTimeout with default headers values
func NewEdgeDiagnosticsGetEventsTimelineGatewayTimeout() *EdgeDiagnosticsGetEventsTimelineGatewayTimeout {
	return &EdgeDiagnosticsGetEventsTimelineGatewayTimeout{}
}

/* EdgeDiagnosticsGetEventsTimelineGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeDiagnosticsGetEventsTimelineGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *EdgeDiagnosticsGetEventsTimelineGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] edgeDiagnosticsGetEventsTimelineGatewayTimeout  %+v", 504, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeDiagnosticsGetEventsTimelineDefault creates a EdgeDiagnosticsGetEventsTimelineDefault with default headers values
func NewEdgeDiagnosticsGetEventsTimelineDefault(code int) *EdgeDiagnosticsGetEventsTimelineDefault {
	return &EdgeDiagnosticsGetEventsTimelineDefault{
		_statusCode: code,
	}
}

/* EdgeDiagnosticsGetEventsTimelineDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeDiagnosticsGetEventsTimelineDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the edge diagnostics get events timeline default response
func (o *EdgeDiagnosticsGetEventsTimelineDefault) Code() int {
	return o._statusCode
}

func (o *EdgeDiagnosticsGetEventsTimelineDefault) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] EdgeDiagnostics_GetEventsTimeline default  %+v", o._statusCode, o.Payload)
}
func (o *EdgeDiagnosticsGetEventsTimelineDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeDiagnosticsGetEventsTimelineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
