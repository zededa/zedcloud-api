// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package bulk_job_ops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new bulk job ops API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for bulk job ops API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BulkJobOpsBulkCreateEdgeApplicationInstances(params *BulkJobOpsBulkCreateEdgeApplicationInstancesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkCreateEdgeApplicationInstancesOK, error)

	BulkJobOpsBulkImportEdgeApplications(params *BulkJobOpsBulkImportEdgeApplicationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkImportEdgeApplicationsOK, error)

	BulkJobOpsBulkImportHardwareModels(params *BulkJobOpsBulkImportHardwareModelsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkImportHardwareModelsOK, error)

	BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstances(params *BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesOK, error)

	BulkJobOpsBulkRefreshEdgeApplicationInstances(params *BulkJobOpsBulkRefreshEdgeApplicationInstancesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkRefreshEdgeApplicationInstancesOK, error)

	BulkJobOpsBulkUpdateEdgeNodeBaseOS(params *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkUpdateEdgeNodeBaseOSOK, error)

	BulkJobOpsCreateJob(params *BulkJobOpsCreateJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsCreateJobOK, error)

	BulkJobOpsDeleteJob(params *BulkJobOpsDeleteJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsDeleteJobOK, error)

	BulkJobOpsGetJob(params *BulkJobOpsGetJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsGetJobOK, error)

	BulkJobOpsGetJobByName(params *BulkJobOpsGetJobByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsGetJobByNameOK, error)

	BulkJobOpsQueryJobs(params *BulkJobOpsQueryJobsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsQueryJobsOK, error)

	BulkJobOpsUpdateJob(params *BulkJobOpsUpdateJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsUpdateJobOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BulkJobOpsBulkCreateEdgeApplicationInstances updates job request to create edge application instances

  Update job request to create edge application instance(s) on edge node(s) matching selection criteria.
*/
func (a *Client) BulkJobOpsBulkCreateEdgeApplicationInstances(params *BulkJobOpsBulkCreateEdgeApplicationInstancesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkCreateEdgeApplicationInstancesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsBulkCreateEdgeApplicationInstancesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_BulkCreateEdgeApplicationInstances",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/apps/instances/create",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsBulkCreateEdgeApplicationInstancesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsBulkCreateEdgeApplicationInstancesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsBulkCreateEdgeApplicationInstancesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsBulkImportEdgeApplications updates job request to import edge application bundles

  Update job request to import edge application bundle(s) from global App Store matching selection criteria.
*/
func (a *Client) BulkJobOpsBulkImportEdgeApplications(params *BulkJobOpsBulkImportEdgeApplicationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkImportEdgeApplicationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsBulkImportEdgeApplicationsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_BulkImportEdgeApplications",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/apps/bundles/import",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsBulkImportEdgeApplicationsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsBulkImportEdgeApplicationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsBulkImportEdgeApplicationsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsBulkImportHardwareModels updates job request to import hardware models

  Update job request to import hardware model(s) from global Model Store matching selection criteria.
*/
func (a *Client) BulkJobOpsBulkImportHardwareModels(params *BulkJobOpsBulkImportHardwareModelsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkImportHardwareModelsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsBulkImportHardwareModelsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_BulkImportHardwareModels",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/models/import",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsBulkImportHardwareModelsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsBulkImportHardwareModelsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsBulkImportHardwareModelsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstances updates job request to refresh and purge edge application instances

  Update job request to refresh and purge edge application instances matching selection criteria. Update edge application instance(s) to the latest version of the edge application. This operation will result in loss of data and a restart of the edge application instance(s).
*/
func (a *Client) BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstances(params *BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_BulkRefreshAndPurgeEdgeApplicationInstances",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/apps/instances/refresh/purge",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsBulkRefreshAndPurgeEdgeApplicationInstancesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsBulkRefreshEdgeApplicationInstances updates job request to refresh edge application instances

  Update job request to refresh edge application instances matching selection criteria. Update edge application instance(s) to the latest version of the edge application. This operation will result in a restart of the edge application instance(s).
*/
func (a *Client) BulkJobOpsBulkRefreshEdgeApplicationInstances(params *BulkJobOpsBulkRefreshEdgeApplicationInstancesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkRefreshEdgeApplicationInstancesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsBulkRefreshEdgeApplicationInstancesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_BulkRefreshEdgeApplicationInstances",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/apps/instances/refresh",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsBulkRefreshEdgeApplicationInstancesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsBulkRefreshEdgeApplicationInstancesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsBulkRefreshEdgeApplicationInstancesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsBulkUpdateEdgeNodeBaseOS updates job request to update e v e image on edge nodes

  Update job request to update EVE image on edge nodes. If edge node is already running the latest EVE image no action is taken.
*/
func (a *Client) BulkJobOpsBulkUpdateEdgeNodeBaseOS(params *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsBulkUpdateEdgeNodeBaseOSOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_BulkUpdateEdgeNodeBaseOS",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/devices/baseos/upgrade",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsBulkUpdateEdgeNodeBaseOSReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsBulkUpdateEdgeNodeBaseOSOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsBulkUpdateEdgeNodeBaseOSDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsCreateJob creates asynchronous job request

  Create an asynchronous job request record.
*/
func (a *Client) BulkJobOpsCreateJob(params *BulkJobOpsCreateJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsCreateJobOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsCreateJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_CreateJob",
		Method:             "POST",
		PathPattern:        "/v1/jobs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsCreateJobReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsCreateJobOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsCreateJobDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsDeleteJob deletes asynchronous job request

  Delete an asynchronous job request record.
*/
func (a *Client) BulkJobOpsDeleteJob(params *BulkJobOpsDeleteJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsDeleteJobOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsDeleteJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_DeleteJob",
		Method:             "DELETE",
		PathPattern:        "/v1/jobs/id/{id}/objectType/{objectType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsDeleteJobReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsDeleteJobOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsDeleteJobDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsGetJob gets asynchronous job request

  Get the configuration and status of an asynchronous job request record.
*/
func (a *Client) BulkJobOpsGetJob(params *BulkJobOpsGetJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsGetJobOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsGetJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_GetJob",
		Method:             "GET",
		PathPattern:        "/v1/jobs/id/{id}/objectType/{objectType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsGetJobReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsGetJobOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsGetJobDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsGetJobByName gets asynchronous job request

  Get the configuration and status of an asynchronous job request record.
*/
func (a *Client) BulkJobOpsGetJobByName(params *BulkJobOpsGetJobByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsGetJobByNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsGetJobByNameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_GetJobByName",
		Method:             "GET",
		PathPattern:        "/v1/jobs/name/{name}/objectType/{objectType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsGetJobByNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsGetJobByNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsGetJobByNameDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsQueryJobs queries asynchronous job requests

  Query the asynchronous job request records.
*/
func (a *Client) BulkJobOpsQueryJobs(params *BulkJobOpsQueryJobsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsQueryJobsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsQueryJobsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_QueryJobs",
		Method:             "GET",
		PathPattern:        "/v1/jobs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsQueryJobsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsQueryJobsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsQueryJobsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  BulkJobOpsUpdateJob updates asynchronous job request

  Update an asynchronous job request record. The usual pattern to update an asynchronous job request record is to retrieve the record and update with the modified values in a new body to update the asynchronous job request record.
*/
func (a *Client) BulkJobOpsUpdateJob(params *BulkJobOpsUpdateJobParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BulkJobOpsUpdateJobOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBulkJobOpsUpdateJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BulkJobOps_UpdateJob",
		Method:             "PUT",
		PathPattern:        "/v1/jobs/id/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BulkJobOpsUpdateJobReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BulkJobOpsUpdateJobOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BulkJobOpsUpdateJobDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
