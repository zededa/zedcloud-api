// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package bulk_job_ops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// BulkJobOpsUpdateJobReader is a Reader for the BulkJobOpsUpdateJob structure.
type BulkJobOpsUpdateJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BulkJobOpsUpdateJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBulkJobOpsUpdateJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBulkJobOpsUpdateJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBulkJobOpsUpdateJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBulkJobOpsUpdateJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBulkJobOpsUpdateJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewBulkJobOpsUpdateJobConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBulkJobOpsUpdateJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewBulkJobOpsUpdateJobGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBulkJobOpsUpdateJobDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBulkJobOpsUpdateJobOK creates a BulkJobOpsUpdateJobOK with default headers values
func NewBulkJobOpsUpdateJobOK() *BulkJobOpsUpdateJobOK {
	return &BulkJobOpsUpdateJobOK{}
}

/*
BulkJobOpsUpdateJobOK describes a response with status code 200, with default header values.

A successful response.
*/
type BulkJobOpsUpdateJobOK struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job o k response has a 2xx status code
func (o *BulkJobOpsUpdateJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bulk job ops update job o k response has a 3xx status code
func (o *BulkJobOpsUpdateJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job o k response has a 4xx status code
func (o *BulkJobOpsUpdateJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk job ops update job o k response has a 5xx status code
func (o *BulkJobOpsUpdateJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk job ops update job o k response a status code equal to that given
func (o *BulkJobOpsUpdateJobOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bulk job ops update job o k response
func (o *BulkJobOpsUpdateJobOK) Code() int {
	return 200
}

func (o *BulkJobOpsUpdateJobOK) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobOK  %+v", 200, o.Payload)
}

func (o *BulkJobOpsUpdateJobOK) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobOK  %+v", 200, o.Payload)
}

func (o *BulkJobOpsUpdateJobOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobBadRequest creates a BulkJobOpsUpdateJobBadRequest with default headers values
func NewBulkJobOpsUpdateJobBadRequest() *BulkJobOpsUpdateJobBadRequest {
	return &BulkJobOpsUpdateJobBadRequest{}
}

/*
BulkJobOpsUpdateJobBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type BulkJobOpsUpdateJobBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job bad request response has a 2xx status code
func (o *BulkJobOpsUpdateJobBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job bad request response has a 3xx status code
func (o *BulkJobOpsUpdateJobBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job bad request response has a 4xx status code
func (o *BulkJobOpsUpdateJobBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk job ops update job bad request response has a 5xx status code
func (o *BulkJobOpsUpdateJobBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk job ops update job bad request response a status code equal to that given
func (o *BulkJobOpsUpdateJobBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the bulk job ops update job bad request response
func (o *BulkJobOpsUpdateJobBadRequest) Code() int {
	return 400
}

func (o *BulkJobOpsUpdateJobBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobBadRequest  %+v", 400, o.Payload)
}

func (o *BulkJobOpsUpdateJobBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobBadRequest  %+v", 400, o.Payload)
}

func (o *BulkJobOpsUpdateJobBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobUnauthorized creates a BulkJobOpsUpdateJobUnauthorized with default headers values
func NewBulkJobOpsUpdateJobUnauthorized() *BulkJobOpsUpdateJobUnauthorized {
	return &BulkJobOpsUpdateJobUnauthorized{}
}

/*
BulkJobOpsUpdateJobUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type BulkJobOpsUpdateJobUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job unauthorized response has a 2xx status code
func (o *BulkJobOpsUpdateJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job unauthorized response has a 3xx status code
func (o *BulkJobOpsUpdateJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job unauthorized response has a 4xx status code
func (o *BulkJobOpsUpdateJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk job ops update job unauthorized response has a 5xx status code
func (o *BulkJobOpsUpdateJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk job ops update job unauthorized response a status code equal to that given
func (o *BulkJobOpsUpdateJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the bulk job ops update job unauthorized response
func (o *BulkJobOpsUpdateJobUnauthorized) Code() int {
	return 401
}

func (o *BulkJobOpsUpdateJobUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobUnauthorized  %+v", 401, o.Payload)
}

func (o *BulkJobOpsUpdateJobUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobUnauthorized  %+v", 401, o.Payload)
}

func (o *BulkJobOpsUpdateJobUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobForbidden creates a BulkJobOpsUpdateJobForbidden with default headers values
func NewBulkJobOpsUpdateJobForbidden() *BulkJobOpsUpdateJobForbidden {
	return &BulkJobOpsUpdateJobForbidden{}
}

/*
BulkJobOpsUpdateJobForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-app level access permission for the operation or does not have access scope to the project.
*/
type BulkJobOpsUpdateJobForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job forbidden response has a 2xx status code
func (o *BulkJobOpsUpdateJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job forbidden response has a 3xx status code
func (o *BulkJobOpsUpdateJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job forbidden response has a 4xx status code
func (o *BulkJobOpsUpdateJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk job ops update job forbidden response has a 5xx status code
func (o *BulkJobOpsUpdateJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk job ops update job forbidden response a status code equal to that given
func (o *BulkJobOpsUpdateJobForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the bulk job ops update job forbidden response
func (o *BulkJobOpsUpdateJobForbidden) Code() int {
	return 403
}

func (o *BulkJobOpsUpdateJobForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobForbidden  %+v", 403, o.Payload)
}

func (o *BulkJobOpsUpdateJobForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobForbidden  %+v", 403, o.Payload)
}

func (o *BulkJobOpsUpdateJobForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobNotFound creates a BulkJobOpsUpdateJobNotFound with default headers values
func NewBulkJobOpsUpdateJobNotFound() *BulkJobOpsUpdateJobNotFound {
	return &BulkJobOpsUpdateJobNotFound{}
}

/*
BulkJobOpsUpdateJobNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type BulkJobOpsUpdateJobNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job not found response has a 2xx status code
func (o *BulkJobOpsUpdateJobNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job not found response has a 3xx status code
func (o *BulkJobOpsUpdateJobNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job not found response has a 4xx status code
func (o *BulkJobOpsUpdateJobNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk job ops update job not found response has a 5xx status code
func (o *BulkJobOpsUpdateJobNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk job ops update job not found response a status code equal to that given
func (o *BulkJobOpsUpdateJobNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the bulk job ops update job not found response
func (o *BulkJobOpsUpdateJobNotFound) Code() int {
	return 404
}

func (o *BulkJobOpsUpdateJobNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobNotFound  %+v", 404, o.Payload)
}

func (o *BulkJobOpsUpdateJobNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobNotFound  %+v", 404, o.Payload)
}

func (o *BulkJobOpsUpdateJobNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobConflict creates a BulkJobOpsUpdateJobConflict with default headers values
func NewBulkJobOpsUpdateJobConflict() *BulkJobOpsUpdateJobConflict {
	return &BulkJobOpsUpdateJobConflict{}
}

/*
BulkJobOpsUpdateJobConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing asynchronous job request record.
*/
type BulkJobOpsUpdateJobConflict struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job conflict response has a 2xx status code
func (o *BulkJobOpsUpdateJobConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job conflict response has a 3xx status code
func (o *BulkJobOpsUpdateJobConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job conflict response has a 4xx status code
func (o *BulkJobOpsUpdateJobConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk job ops update job conflict response has a 5xx status code
func (o *BulkJobOpsUpdateJobConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk job ops update job conflict response a status code equal to that given
func (o *BulkJobOpsUpdateJobConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the bulk job ops update job conflict response
func (o *BulkJobOpsUpdateJobConflict) Code() int {
	return 409
}

func (o *BulkJobOpsUpdateJobConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobConflict  %+v", 409, o.Payload)
}

func (o *BulkJobOpsUpdateJobConflict) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobConflict  %+v", 409, o.Payload)
}

func (o *BulkJobOpsUpdateJobConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobInternalServerError creates a BulkJobOpsUpdateJobInternalServerError with default headers values
func NewBulkJobOpsUpdateJobInternalServerError() *BulkJobOpsUpdateJobInternalServerError {
	return &BulkJobOpsUpdateJobInternalServerError{}
}

/*
BulkJobOpsUpdateJobInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type BulkJobOpsUpdateJobInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job internal server error response has a 2xx status code
func (o *BulkJobOpsUpdateJobInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job internal server error response has a 3xx status code
func (o *BulkJobOpsUpdateJobInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job internal server error response has a 4xx status code
func (o *BulkJobOpsUpdateJobInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk job ops update job internal server error response has a 5xx status code
func (o *BulkJobOpsUpdateJobInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this bulk job ops update job internal server error response a status code equal to that given
func (o *BulkJobOpsUpdateJobInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the bulk job ops update job internal server error response
func (o *BulkJobOpsUpdateJobInternalServerError) Code() int {
	return 500
}

func (o *BulkJobOpsUpdateJobInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobInternalServerError  %+v", 500, o.Payload)
}

func (o *BulkJobOpsUpdateJobInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobInternalServerError  %+v", 500, o.Payload)
}

func (o *BulkJobOpsUpdateJobInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobGatewayTimeout creates a BulkJobOpsUpdateJobGatewayTimeout with default headers values
func NewBulkJobOpsUpdateJobGatewayTimeout() *BulkJobOpsUpdateJobGatewayTimeout {
	return &BulkJobOpsUpdateJobGatewayTimeout{}
}

/*
BulkJobOpsUpdateJobGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type BulkJobOpsUpdateJobGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this bulk job ops update job gateway timeout response has a 2xx status code
func (o *BulkJobOpsUpdateJobGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk job ops update job gateway timeout response has a 3xx status code
func (o *BulkJobOpsUpdateJobGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk job ops update job gateway timeout response has a 4xx status code
func (o *BulkJobOpsUpdateJobGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk job ops update job gateway timeout response has a 5xx status code
func (o *BulkJobOpsUpdateJobGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this bulk job ops update job gateway timeout response a status code equal to that given
func (o *BulkJobOpsUpdateJobGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the bulk job ops update job gateway timeout response
func (o *BulkJobOpsUpdateJobGatewayTimeout) Code() int {
	return 504
}

func (o *BulkJobOpsUpdateJobGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *BulkJobOpsUpdateJobGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] bulkJobOpsUpdateJobGatewayTimeout  %+v", 504, o.Payload)
}

func (o *BulkJobOpsUpdateJobGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkJobOpsUpdateJobDefault creates a BulkJobOpsUpdateJobDefault with default headers values
func NewBulkJobOpsUpdateJobDefault(code int) *BulkJobOpsUpdateJobDefault {
	return &BulkJobOpsUpdateJobDefault{
		_statusCode: code,
	}
}

/*
BulkJobOpsUpdateJobDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type BulkJobOpsUpdateJobDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// IsSuccess returns true when this bulk job ops update job default response has a 2xx status code
func (o *BulkJobOpsUpdateJobDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this bulk job ops update job default response has a 3xx status code
func (o *BulkJobOpsUpdateJobDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this bulk job ops update job default response has a 4xx status code
func (o *BulkJobOpsUpdateJobDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this bulk job ops update job default response has a 5xx status code
func (o *BulkJobOpsUpdateJobDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this bulk job ops update job default response a status code equal to that given
func (o *BulkJobOpsUpdateJobDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the bulk job ops update job default response
func (o *BulkJobOpsUpdateJobDefault) Code() int {
	return o._statusCode
}

func (o *BulkJobOpsUpdateJobDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] BulkJobOps_UpdateJob default  %+v", o._statusCode, o.Payload)
}

func (o *BulkJobOpsUpdateJobDefault) String() string {
	return fmt.Sprintf("[PUT /v1/jobs/id/{id}][%d] BulkJobOps_UpdateJob default  %+v", o._statusCode, o.Payload)
}

func (o *BulkJobOpsUpdateJobDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *BulkJobOpsUpdateJobDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
BulkJobOpsUpdateJobBody config required for job ops
//
// config required for job ops
// Example: {"id":"d85a545f-6510-4327-b03d-c02eef119e99","name":"sample-job","objectType":"OBJECT_TYPE_EDGE_NODE"}
swagger:model BulkJobOpsUpdateJobBody
*/
type BulkJobOpsUpdateJobBody struct {

	// user or system specified description
	Description string `json:"description,omitempty"`

	// detailed error with which job/task has failed
	// Read Only: true
	ErrorDetailOfJob string `json:"errorDetailOfJob,omitempty"`

	// finish time of the job
	// Read Only: true
	// Format: date-time
	FinishTime strfmt.DateTime `json:"finishTime,omitempty"`

	// status of individual field of the given object
	// Read Only: true
	IndividualOpStatus map[string]string `json:"individualOpStatus,omitempty"`

	// User defined name of the job request, unique across the enterprise. Once object is created, name can’t be changed
	// Required: true
	// Max Length: 256
	// Min Length: 3
	// Pattern: [a-zA-Z0-9][a-zA-Z0-9_.-]+
	Name *string `json:"name"`

	// object list
	ObjectList []string `json:"objectList"`

	// object type for which job has been created
	// Required: true
	ObjectType *swagger_models.ObjectType `json:"objectType"`

	// operation type
	OperationType *swagger_models.BulkService `json:"operationType,omitempty"`

	// project Id in which job is getting created
	ProjectID string `json:"projectId,omitempty"`

	// system defined info
	// Read Only: true
	Revision *swagger_models.ObjectRevision `json:"revision,omitempty"`

	// selection criteria for the job
	// Read Only: true
	SelectionCriteria *swagger_models.SelectionCriteria `json:"selectionCriteria,omitempty"`

	// start time of the job
	// Read Only: true
	// Format: date-time
	StartTime strfmt.DateTime `json:"startTime,omitempty"`

	// status of the job
	// Read Only: true
	Status *swagger_models.JobStatus `json:"status,omitempty"`

	// user or system specified title
	Title string `json:"title,omitempty"`
}

// Validate validates this bulk job ops update job body
func (o *BulkJobOpsUpdateJobBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFinishTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateObjectType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperationType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRevision(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelectionCriteria(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateFinishTime(formats strfmt.Registry) error {
	if swag.IsZero(o.FinishTime) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"finishTime", "body", "date-time", o.FinishTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	if err := validate.MinLength("body"+"."+"name", "body", *o.Name, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("body"+"."+"name", "body", *o.Name, 256); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"name", "body", *o.Name, `[a-zA-Z0-9][a-zA-Z0-9_.-]+`); err != nil {
		return err
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateObjectType(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"objectType", "body", o.ObjectType); err != nil {
		return err
	}

	if err := validate.Required("body"+"."+"objectType", "body", o.ObjectType); err != nil {
		return err
	}

	if o.ObjectType != nil {
		if err := o.ObjectType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "objectType")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "objectType")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateOperationType(formats strfmt.Registry) error {
	if swag.IsZero(o.OperationType) { // not required
		return nil
	}

	if o.OperationType != nil {
		if err := o.OperationType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "operationType")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "operationType")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateRevision(formats strfmt.Registry) error {
	if swag.IsZero(o.Revision) { // not required
		return nil
	}

	if o.Revision != nil {
		if err := o.Revision.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "revision")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "revision")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateSelectionCriteria(formats strfmt.Registry) error {
	if swag.IsZero(o.SelectionCriteria) { // not required
		return nil
	}

	if o.SelectionCriteria != nil {
		if err := o.SelectionCriteria.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "selectionCriteria")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "selectionCriteria")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateStartTime(formats strfmt.Registry) error {
	if swag.IsZero(o.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"startTime", "body", "date-time", o.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(o.Status) { // not required
		return nil
	}

	if o.Status != nil {
		if err := o.Status.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "status")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "status")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this bulk job ops update job body based on the context it is used
func (o *BulkJobOpsUpdateJobBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrorDetailOfJob(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateFinishTime(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateIndividualOpStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateObjectType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateOperationType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateRevision(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSelectionCriteria(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateStartTime(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateErrorDetailOfJob(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "body"+"."+"errorDetailOfJob", "body", string(o.ErrorDetailOfJob)); err != nil {
		return err
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateFinishTime(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "body"+"."+"finishTime", "body", strfmt.DateTime(o.FinishTime)); err != nil {
		return err
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateIndividualOpStatus(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateObjectType(ctx context.Context, formats strfmt.Registry) error {

	if o.ObjectType != nil {

		if err := o.ObjectType.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "objectType")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "objectType")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateOperationType(ctx context.Context, formats strfmt.Registry) error {

	if o.OperationType != nil {

		if swag.IsZero(o.OperationType) { // not required
			return nil
		}

		if err := o.OperationType.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "operationType")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "operationType")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateRevision(ctx context.Context, formats strfmt.Registry) error {

	if o.Revision != nil {

		if swag.IsZero(o.Revision) { // not required
			return nil
		}

		if err := o.Revision.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "revision")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "revision")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateSelectionCriteria(ctx context.Context, formats strfmt.Registry) error {

	if o.SelectionCriteria != nil {

		if swag.IsZero(o.SelectionCriteria) { // not required
			return nil
		}

		if err := o.SelectionCriteria.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "selectionCriteria")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "selectionCriteria")
			}
			return err
		}
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateStartTime(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "body"+"."+"startTime", "body", strfmt.DateTime(o.StartTime)); err != nil {
		return err
	}

	return nil
}

func (o *BulkJobOpsUpdateJobBody) contextValidateStatus(ctx context.Context, formats strfmt.Registry) error {

	if o.Status != nil {

		if swag.IsZero(o.Status) { // not required
			return nil
		}

		if err := o.Status.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "status")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "status")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *BulkJobOpsUpdateJobBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BulkJobOpsUpdateJobBody) UnmarshalBinary(b []byte) error {
	var res BulkJobOpsUpdateJobBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
