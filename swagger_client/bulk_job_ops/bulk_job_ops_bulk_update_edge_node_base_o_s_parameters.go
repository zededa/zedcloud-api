// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package bulk_job_ops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParams creates a new BulkJobOpsBulkUpdateEdgeNodeBaseOSParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParams() *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	return &BulkJobOpsBulkUpdateEdgeNodeBaseOSParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParamsWithTimeout creates a new BulkJobOpsBulkUpdateEdgeNodeBaseOSParams object
// with the ability to set a timeout on a request.
func NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParamsWithTimeout(timeout time.Duration) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	return &BulkJobOpsBulkUpdateEdgeNodeBaseOSParams{
		timeout: timeout,
	}
}

// NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParamsWithContext creates a new BulkJobOpsBulkUpdateEdgeNodeBaseOSParams object
// with the ability to set a context for a request.
func NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParamsWithContext(ctx context.Context) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	return &BulkJobOpsBulkUpdateEdgeNodeBaseOSParams{
		Context: ctx,
	}
}

// NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParamsWithHTTPClient creates a new BulkJobOpsBulkUpdateEdgeNodeBaseOSParams object
// with the ability to set a custom HTTPClient for a request.
func NewBulkJobOpsBulkUpdateEdgeNodeBaseOSParamsWithHTTPClient(client *http.Client) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	return &BulkJobOpsBulkUpdateEdgeNodeBaseOSParams{
		HTTPClient: client,
	}
}

/* BulkJobOpsBulkUpdateEdgeNodeBaseOSParams contains all the parameters to send to the API endpoint
   for the bulk job ops bulk update edge node base o s operation.

   Typically these are written to a http.Request.
*/
type BulkJobOpsBulkUpdateEdgeNodeBaseOSParams struct {

	/* XRequestID.

	   User-Agent specified id to track a request
	*/
	XRequestID *string

	// Body.
	Body *swagger_models.BulkConfig

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the bulk job ops bulk update edge node base o s params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WithDefaults() *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the bulk job ops bulk update edge node base o s params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WithTimeout(timeout time.Duration) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WithContext(ctx context.Context) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WithHTTPClient(client *http.Client) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WithXRequestID(xRequestID *string) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithBody adds the body to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WithBody(body *swagger_models.BulkConfig) *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the bulk job ops bulk update edge node base o s params
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) SetBody(body *swagger_models.BulkConfig) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *BulkJobOpsBulkUpdateEdgeNodeBaseOSParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
