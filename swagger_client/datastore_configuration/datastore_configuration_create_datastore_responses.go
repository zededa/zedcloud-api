// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package datastore_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// DatastoreConfigurationCreateDatastoreReader is a Reader for the DatastoreConfigurationCreateDatastore structure.
type DatastoreConfigurationCreateDatastoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DatastoreConfigurationCreateDatastoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDatastoreConfigurationCreateDatastoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDatastoreConfigurationCreateDatastoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDatastoreConfigurationCreateDatastoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDatastoreConfigurationCreateDatastoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDatastoreConfigurationCreateDatastoreConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDatastoreConfigurationCreateDatastoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDatastoreConfigurationCreateDatastoreGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDatastoreConfigurationCreateDatastoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDatastoreConfigurationCreateDatastoreOK creates a DatastoreConfigurationCreateDatastoreOK with default headers values
func NewDatastoreConfigurationCreateDatastoreOK() *DatastoreConfigurationCreateDatastoreOK {
	return &DatastoreConfigurationCreateDatastoreOK{}
}

/* DatastoreConfigurationCreateDatastoreOK describes a response with status code 200, with default header values.

A successful response.
*/
type DatastoreConfigurationCreateDatastoreOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreOK) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreOK  %+v", 200, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreBadRequest creates a DatastoreConfigurationCreateDatastoreBadRequest with default headers values
func NewDatastoreConfigurationCreateDatastoreBadRequest() *DatastoreConfigurationCreateDatastoreBadRequest {
	return &DatastoreConfigurationCreateDatastoreBadRequest{}
}

/* DatastoreConfigurationCreateDatastoreBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type DatastoreConfigurationCreateDatastoreBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreBadRequest  %+v", 400, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreUnauthorized creates a DatastoreConfigurationCreateDatastoreUnauthorized with default headers values
func NewDatastoreConfigurationCreateDatastoreUnauthorized() *DatastoreConfigurationCreateDatastoreUnauthorized {
	return &DatastoreConfigurationCreateDatastoreUnauthorized{}
}

/* DatastoreConfigurationCreateDatastoreUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DatastoreConfigurationCreateDatastoreUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreUnauthorized  %+v", 401, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreForbidden creates a DatastoreConfigurationCreateDatastoreForbidden with default headers values
func NewDatastoreConfigurationCreateDatastoreForbidden() *DatastoreConfigurationCreateDatastoreForbidden {
	return &DatastoreConfigurationCreateDatastoreForbidden{}
}

/* DatastoreConfigurationCreateDatastoreForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DatastoreConfigurationCreateDatastoreForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreForbidden  %+v", 403, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreConflict creates a DatastoreConfigurationCreateDatastoreConflict with default headers values
func NewDatastoreConfigurationCreateDatastoreConflict() *DatastoreConfigurationCreateDatastoreConflict {
	return &DatastoreConfigurationCreateDatastoreConflict{}
}

/* DatastoreConfigurationCreateDatastoreConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this datastore record will conflict with an already existing datastore record.
*/
type DatastoreConfigurationCreateDatastoreConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreConflict) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreConflict  %+v", 409, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreInternalServerError creates a DatastoreConfigurationCreateDatastoreInternalServerError with default headers values
func NewDatastoreConfigurationCreateDatastoreInternalServerError() *DatastoreConfigurationCreateDatastoreInternalServerError {
	return &DatastoreConfigurationCreateDatastoreInternalServerError{}
}

/* DatastoreConfigurationCreateDatastoreInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DatastoreConfigurationCreateDatastoreInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreInternalServerError  %+v", 500, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreGatewayTimeout creates a DatastoreConfigurationCreateDatastoreGatewayTimeout with default headers values
func NewDatastoreConfigurationCreateDatastoreGatewayTimeout() *DatastoreConfigurationCreateDatastoreGatewayTimeout {
	return &DatastoreConfigurationCreateDatastoreGatewayTimeout{}
}

/* DatastoreConfigurationCreateDatastoreGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DatastoreConfigurationCreateDatastoreGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreGatewayTimeout  %+v", 504, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreDefault creates a DatastoreConfigurationCreateDatastoreDefault with default headers values
func NewDatastoreConfigurationCreateDatastoreDefault(code int) *DatastoreConfigurationCreateDatastoreDefault {
	return &DatastoreConfigurationCreateDatastoreDefault{
		_statusCode: code,
	}
}

/* DatastoreConfigurationCreateDatastoreDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DatastoreConfigurationCreateDatastoreDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the datastore configuration create datastore default response
func (o *DatastoreConfigurationCreateDatastoreDefault) Code() int {
	return o._statusCode
}

func (o *DatastoreConfigurationCreateDatastoreDefault) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] DatastoreConfiguration_CreateDatastore default  %+v", o._statusCode, o.Payload)
}
func (o *DatastoreConfigurationCreateDatastoreDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
