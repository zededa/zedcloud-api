// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package volume_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// VolumeInstanceStatusGetVolumeInstanceStatusReader is a Reader for the VolumeInstanceStatusGetVolumeInstanceStatus structure.
type VolumeInstanceStatusGetVolumeInstanceStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VolumeInstanceStatusGetVolumeInstanceStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusOK creates a VolumeInstanceStatusGetVolumeInstanceStatusOK with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusOK() *VolumeInstanceStatusGetVolumeInstanceStatusOK {
	return &VolumeInstanceStatusGetVolumeInstanceStatusOK{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusOK struct {
	Payload *swagger_models.VolInstStatusMsg
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusOK  %+v", 200, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusOK) GetPayload() *swagger_models.VolInstStatusMsg {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.VolInstStatusMsg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusUnauthorized creates a VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusUnauthorized() *VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized {
	return &VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusUnauthorized  %+v", 401, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusForbidden creates a VolumeInstanceStatusGetVolumeInstanceStatusForbidden with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusForbidden() *VolumeInstanceStatusGetVolumeInstanceStatusForbidden {
	return &VolumeInstanceStatusGetVolumeInstanceStatusForbidden{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusForbidden  %+v", 403, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusNotFound creates a VolumeInstanceStatusGetVolumeInstanceStatusNotFound with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusNotFound() *VolumeInstanceStatusGetVolumeInstanceStatusNotFound {
	return &VolumeInstanceStatusGetVolumeInstanceStatusNotFound{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusNotFound  %+v", 404, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusInternalServerError creates a VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusInternalServerError() *VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError {
	return &VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusInternalServerError  %+v", 500, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout creates a VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout() *VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout {
	return &VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout  %+v", 504, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusDefault creates a VolumeInstanceStatusGetVolumeInstanceStatusDefault with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusDefault(code int) *VolumeInstanceStatusGetVolumeInstanceStatusDefault {
	return &VolumeInstanceStatusGetVolumeInstanceStatusDefault{
		_statusCode: code,
	}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the volume instance status get volume instance status default response
func (o *VolumeInstanceStatusGetVolumeInstanceStatusDefault) Code() int {
	return o._statusCode
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{id}/status][%d] VolumeInstanceStatus_GetVolumeInstanceStatus default  %+v", o._statusCode, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
