// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package volume_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// VolumeInstanceStatusGetVolumeInstanceStatusByNameReader is a Reader for the VolumeInstanceStatusGetVolumeInstanceStatusByName structure.
type VolumeInstanceStatusGetVolumeInstanceStatusByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewVolumeInstanceStatusGetVolumeInstanceStatusByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameOK creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameOK with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameOK() *VolumeInstanceStatusGetVolumeInstanceStatusByNameOK {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameOK{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameOK struct {
	Payload *swagger_models.VolInstStatusMsg
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusByNameOK  %+v", 200, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameOK) GetPayload() *swagger_models.VolInstStatusMsg {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.VolInstStatusMsg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized() *VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden() *VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusByNameForbidden  %+v", 403, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound() *VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusByNameNotFound  %+v", 404, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError() *VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout() *VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout{}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] volumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceStatusByNameDefault creates a VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceStatusByNameDefault(code int) *VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault {
	return &VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault{
		_statusCode: code,
	}
}

/* VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the volume instance status get volume instance status by name default response
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault) Code() int {
	return o._statusCode
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{name}/status][%d] VolumeInstanceStatus_GetVolumeInstanceStatusByName default  %+v", o._statusCode, o.Payload)
}
func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceStatusByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
