// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package volume_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// VolumeInstanceStatusGetVolumeInstanceEventsReader is a Reader for the VolumeInstanceStatusGetVolumeInstanceEvents structure.
type VolumeInstanceStatusGetVolumeInstanceEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VolumeInstanceStatusGetVolumeInstanceEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewVolumeInstanceStatusGetVolumeInstanceEventsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsOK creates a VolumeInstanceStatusGetVolumeInstanceEventsOK with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsOK() *VolumeInstanceStatusGetVolumeInstanceEventsOK {
	return &VolumeInstanceStatusGetVolumeInstanceEventsOK{}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsOK describes a response with status code 200, with default header values.

A successful response.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsOK struct {
	Payload *swagger_models.EventQueryResponse
}

// IsSuccess returns true when this volume instance status get volume instance events o k response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this volume instance status get volume instance events o k response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this volume instance status get volume instance events o k response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this volume instance status get volume instance events o k response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this volume instance status get volume instance events o k response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the volume instance status get volume instance events o k response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) Code() int {
	return 200
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsOK  %+v", 200, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsOK  %+v", 200, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) GetPayload() *swagger_models.EventQueryResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.EventQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsUnauthorized creates a VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsUnauthorized() *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized {
	return &VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized{}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this volume instance status get volume instance events unauthorized response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this volume instance status get volume instance events unauthorized response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this volume instance status get volume instance events unauthorized response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this volume instance status get volume instance events unauthorized response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this volume instance status get volume instance events unauthorized response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the volume instance status get volume instance events unauthorized response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) Code() int {
	return 401
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsForbidden creates a VolumeInstanceStatusGetVolumeInstanceEventsForbidden with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsForbidden() *VolumeInstanceStatusGetVolumeInstanceEventsForbidden {
	return &VolumeInstanceStatusGetVolumeInstanceEventsForbidden{}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this volume instance status get volume instance events forbidden response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this volume instance status get volume instance events forbidden response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this volume instance status get volume instance events forbidden response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this volume instance status get volume instance events forbidden response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this volume instance status get volume instance events forbidden response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the volume instance status get volume instance events forbidden response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) Code() int {
	return 403
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsForbidden  %+v", 403, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsForbidden  %+v", 403, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsNotFound creates a VolumeInstanceStatusGetVolumeInstanceEventsNotFound with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsNotFound() *VolumeInstanceStatusGetVolumeInstanceEventsNotFound {
	return &VolumeInstanceStatusGetVolumeInstanceEventsNotFound{}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this volume instance status get volume instance events not found response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this volume instance status get volume instance events not found response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this volume instance status get volume instance events not found response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this volume instance status get volume instance events not found response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this volume instance status get volume instance events not found response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the volume instance status get volume instance events not found response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) Code() int {
	return 404
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsNotFound  %+v", 404, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsNotFound  %+v", 404, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsInternalServerError creates a VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsInternalServerError() *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError {
	return &VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError{}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this volume instance status get volume instance events internal server error response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this volume instance status get volume instance events internal server error response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this volume instance status get volume instance events internal server error response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this volume instance status get volume instance events internal server error response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this volume instance status get volume instance events internal server error response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the volume instance status get volume instance events internal server error response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) Code() int {
	return 500
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout creates a VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout() *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout {
	return &VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout{}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this volume instance status get volume instance events gateway timeout response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this volume instance status get volume instance events gateway timeout response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this volume instance status get volume instance events gateway timeout response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this volume instance status get volume instance events gateway timeout response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this volume instance status get volume instance events gateway timeout response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the volume instance status get volume instance events gateway timeout response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) Code() int {
	return 504
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] volumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVolumeInstanceStatusGetVolumeInstanceEventsDefault creates a VolumeInstanceStatusGetVolumeInstanceEventsDefault with default headers values
func NewVolumeInstanceStatusGetVolumeInstanceEventsDefault(code int) *VolumeInstanceStatusGetVolumeInstanceEventsDefault {
	return &VolumeInstanceStatusGetVolumeInstanceEventsDefault{
		_statusCode: code,
	}
}

/*
VolumeInstanceStatusGetVolumeInstanceEventsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type VolumeInstanceStatusGetVolumeInstanceEventsDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// IsSuccess returns true when this volume instance status get volume instance events default response has a 2xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this volume instance status get volume instance events default response has a 3xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this volume instance status get volume instance events default response has a 4xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this volume instance status get volume instance events default response has a 5xx status code
func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this volume instance status get volume instance events default response a status code equal to that given
func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the volume instance status get volume instance events default response
func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) Code() int {
	return o._statusCode
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] VolumeInstanceStatus_GetVolumeInstanceEvents default  %+v", o._statusCode, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) String() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/id/{objid}/events][%d] VolumeInstanceStatus_GetVolumeInstanceEvents default  %+v", o._statusCode, o.Payload)
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *VolumeInstanceStatusGetVolumeInstanceEventsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
