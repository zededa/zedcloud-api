// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package resource_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ResourceGroupGetResourceGroupByNameReader is a Reader for the ResourceGroupGetResourceGroupByName structure.
type ResourceGroupGetResourceGroupByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResourceGroupGetResourceGroupByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResourceGroupGetResourceGroupByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewResourceGroupGetResourceGroupByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResourceGroupGetResourceGroupByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResourceGroupGetResourceGroupByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResourceGroupGetResourceGroupByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewResourceGroupGetResourceGroupByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewResourceGroupGetResourceGroupByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewResourceGroupGetResourceGroupByNameOK creates a ResourceGroupGetResourceGroupByNameOK with default headers values
func NewResourceGroupGetResourceGroupByNameOK() *ResourceGroupGetResourceGroupByNameOK {
	return &ResourceGroupGetResourceGroupByNameOK{}
}

/*
ResourceGroupGetResourceGroupByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type ResourceGroupGetResourceGroupByNameOK struct {
	Payload *swagger_models.Tag
}

// IsSuccess returns true when this resource group get resource group by name o k response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resource group get resource group by name o k response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource group get resource group by name o k response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource group get resource group by name o k response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this resource group get resource group by name o k response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameOK) IsCode(code int) bool {
	return code == 200
}

func (o *ResourceGroupGetResourceGroupByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameOK  %+v", 200, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameOK) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameOK  %+v", 200, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameOK) GetPayload() *swagger_models.Tag {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Tag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceGroupGetResourceGroupByNameUnauthorized creates a ResourceGroupGetResourceGroupByNameUnauthorized with default headers values
func NewResourceGroupGetResourceGroupByNameUnauthorized() *ResourceGroupGetResourceGroupByNameUnauthorized {
	return &ResourceGroupGetResourceGroupByNameUnauthorized{}
}

/*
ResourceGroupGetResourceGroupByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ResourceGroupGetResourceGroupByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this resource group get resource group by name unauthorized response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource group get resource group by name unauthorized response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource group get resource group by name unauthorized response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource group get resource group by name unauthorized response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this resource group get resource group by name unauthorized response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ResourceGroupGetResourceGroupByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceGroupGetResourceGroupByNameForbidden creates a ResourceGroupGetResourceGroupByNameForbidden with default headers values
func NewResourceGroupGetResourceGroupByNameForbidden() *ResourceGroupGetResourceGroupByNameForbidden {
	return &ResourceGroupGetResourceGroupByNameForbidden{}
}

/*
ResourceGroupGetResourceGroupByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ResourceGroupGetResourceGroupByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this resource group get resource group by name forbidden response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource group get resource group by name forbidden response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource group get resource group by name forbidden response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource group get resource group by name forbidden response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this resource group get resource group by name forbidden response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ResourceGroupGetResourceGroupByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameForbidden  %+v", 403, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameForbidden) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameForbidden  %+v", 403, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceGroupGetResourceGroupByNameNotFound creates a ResourceGroupGetResourceGroupByNameNotFound with default headers values
func NewResourceGroupGetResourceGroupByNameNotFound() *ResourceGroupGetResourceGroupByNameNotFound {
	return &ResourceGroupGetResourceGroupByNameNotFound{}
}

/*
ResourceGroupGetResourceGroupByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ResourceGroupGetResourceGroupByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this resource group get resource group by name not found response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource group get resource group by name not found response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource group get resource group by name not found response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource group get resource group by name not found response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resource group get resource group by name not found response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ResourceGroupGetResourceGroupByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameNotFound  %+v", 404, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameNotFound) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameNotFound  %+v", 404, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceGroupGetResourceGroupByNameInternalServerError creates a ResourceGroupGetResourceGroupByNameInternalServerError with default headers values
func NewResourceGroupGetResourceGroupByNameInternalServerError() *ResourceGroupGetResourceGroupByNameInternalServerError {
	return &ResourceGroupGetResourceGroupByNameInternalServerError{}
}

/*
ResourceGroupGetResourceGroupByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ResourceGroupGetResourceGroupByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this resource group get resource group by name internal server error response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource group get resource group by name internal server error response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource group get resource group by name internal server error response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource group get resource group by name internal server error response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this resource group get resource group by name internal server error response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ResourceGroupGetResourceGroupByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceGroupGetResourceGroupByNameGatewayTimeout creates a ResourceGroupGetResourceGroupByNameGatewayTimeout with default headers values
func NewResourceGroupGetResourceGroupByNameGatewayTimeout() *ResourceGroupGetResourceGroupByNameGatewayTimeout {
	return &ResourceGroupGetResourceGroupByNameGatewayTimeout{}
}

/*
ResourceGroupGetResourceGroupByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ResourceGroupGetResourceGroupByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

// IsSuccess returns true when this resource group get resource group by name gateway timeout response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource group get resource group by name gateway timeout response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource group get resource group by name gateway timeout response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource group get resource group by name gateway timeout response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this resource group get resource group by name gateway timeout response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] resourceGroupGetResourceGroupByNameGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceGroupGetResourceGroupByNameDefault creates a ResourceGroupGetResourceGroupByNameDefault with default headers values
func NewResourceGroupGetResourceGroupByNameDefault(code int) *ResourceGroupGetResourceGroupByNameDefault {
	return &ResourceGroupGetResourceGroupByNameDefault{
		_statusCode: code,
	}
}

/*
ResourceGroupGetResourceGroupByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ResourceGroupGetResourceGroupByNameDefault struct {
	_statusCode int

	Payload *swagger_models.GooglerpcStatus
}

// Code gets the status code for the resource group get resource group by name default response
func (o *ResourceGroupGetResourceGroupByNameDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this resource group get resource group by name default response has a 2xx status code
func (o *ResourceGroupGetResourceGroupByNameDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this resource group get resource group by name default response has a 3xx status code
func (o *ResourceGroupGetResourceGroupByNameDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this resource group get resource group by name default response has a 4xx status code
func (o *ResourceGroupGetResourceGroupByNameDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this resource group get resource group by name default response has a 5xx status code
func (o *ResourceGroupGetResourceGroupByNameDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this resource group get resource group by name default response a status code equal to that given
func (o *ResourceGroupGetResourceGroupByNameDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ResourceGroupGetResourceGroupByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] ResourceGroup_GetResourceGroupByName default  %+v", o._statusCode, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameDefault) String() string {
	return fmt.Sprintf("[GET /v1/projects/name/{name}][%d] ResourceGroup_GetResourceGroupByName default  %+v", o._statusCode, o.Payload)
}

func (o *ResourceGroupGetResourceGroupByNameDefault) GetPayload() *swagger_models.GooglerpcStatus {
	return o.Payload
}

func (o *ResourceGroupGetResourceGroupByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
