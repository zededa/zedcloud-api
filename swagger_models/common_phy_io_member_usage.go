// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CommonPhyIoMemberUsage PhyIoMemberUsage - Indicates how each adaptor must be used by Eve.
//
//  - PhyIoUsageMgmtAndApps: Used by both management and apps.
//  - PhyIoUsageShared: Shared by multiple apps
//  - PhyIoUsageDedicated: used by only one app
//  - PhyIoUsageDisabled: Adapter Blocked. Do not use the Adapter.
//  - PhyIoUsageMgmtOnly: Used for Management traffic only. Cannot be used by Apps.
//
// swagger:model commonPhyIoMemberUsage
type CommonPhyIoMemberUsage string

func NewCommonPhyIoMemberUsage(value CommonPhyIoMemberUsage) *CommonPhyIoMemberUsage {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CommonPhyIoMemberUsage.
func (m CommonPhyIoMemberUsage) Pointer() *CommonPhyIoMemberUsage {
	return &m
}

const (

	// CommonPhyIoMemberUsagePhyIoUsageNone captures enum value "PhyIoUsageNone"
	CommonPhyIoMemberUsagePhyIoUsageNone CommonPhyIoMemberUsage = "PhyIoUsageNone"

	// CommonPhyIoMemberUsagePhyIoUsageMgmtAndApps captures enum value "PhyIoUsageMgmtAndApps"
	CommonPhyIoMemberUsagePhyIoUsageMgmtAndApps CommonPhyIoMemberUsage = "PhyIoUsageMgmtAndApps"

	// CommonPhyIoMemberUsagePhyIoUsageShared captures enum value "PhyIoUsageShared"
	CommonPhyIoMemberUsagePhyIoUsageShared CommonPhyIoMemberUsage = "PhyIoUsageShared"

	// CommonPhyIoMemberUsagePhyIoUsageDedicated captures enum value "PhyIoUsageDedicated"
	CommonPhyIoMemberUsagePhyIoUsageDedicated CommonPhyIoMemberUsage = "PhyIoUsageDedicated"

	// CommonPhyIoMemberUsagePhyIoUsageDisabled captures enum value "PhyIoUsageDisabled"
	CommonPhyIoMemberUsagePhyIoUsageDisabled CommonPhyIoMemberUsage = "PhyIoUsageDisabled"

	// CommonPhyIoMemberUsagePhyIoUsageMgmtOnly captures enum value "PhyIoUsageMgmtOnly"
	CommonPhyIoMemberUsagePhyIoUsageMgmtOnly CommonPhyIoMemberUsage = "PhyIoUsageMgmtOnly"
)

// for schema
var commonPhyIoMemberUsageEnum []interface{}

func init() {
	var res []CommonPhyIoMemberUsage
	if err := json.Unmarshal([]byte(`["PhyIoUsageNone","PhyIoUsageMgmtAndApps","PhyIoUsageShared","PhyIoUsageDedicated","PhyIoUsageDisabled","PhyIoUsageMgmtOnly"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonPhyIoMemberUsageEnum = append(commonPhyIoMemberUsageEnum, v)
	}
}

func (m CommonPhyIoMemberUsage) validateCommonPhyIoMemberUsageEnum(path, location string, value CommonPhyIoMemberUsage) error {
	if err := validate.EnumCase(path, location, value, commonPhyIoMemberUsageEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this common phy io member usage
func (m CommonPhyIoMemberUsage) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCommonPhyIoMemberUsageEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this common phy io member usage based on context it is used
func (m CommonPhyIoMemberUsage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
