// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConfigDeviceOpsCmd Device Operational Commands Semantic
// For rebooting device,  command=Reset, counter = counter+delta, desiredState = on
// For poweroff device,  command=Reset, counter = counter+delta, desiredState = off
// For backup at midnight, command=Backup, counter = counter+delta, desiredState=n/a, opsTime = mm/dd/yy:hh:ss
// Current implementation does support only single command outstanding for each
// type. In future can be extended to have more scheduled events.
//
// swagger:model configDeviceOpsCmd
type ConfigDeviceOpsCmd struct {

	// counter
	Counter int64 `json:"counter,omitempty"`

	// desired state
	DesiredState bool `json:"desiredState,omitempty"`

	// FIXME: change to timestamp, once we move to gogo proto
	OpsTime string `json:"opsTime,omitempty"`
}

// Validate validates this config device ops cmd
func (m *ConfigDeviceOpsCmd) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this config device ops cmd based on context it is used
func (m *ConfigDeviceOpsCmd) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigDeviceOpsCmd) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigDeviceOpsCmd) UnmarshalBinary(b []byte) error {
	var res ConfigDeviceOpsCmd
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
