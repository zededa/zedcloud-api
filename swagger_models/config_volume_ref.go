// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConfigVolumeRef Reference to a Volume specified separately in the API
// If a volume is purged (re-created from scratch) it will either have a new
// UUID or a new generationCount
//
// swagger:model configVolumeRef
type ConfigVolumeRef struct {

	// generation count
	GenerationCount string `json:"generationCount,omitempty"`

	// Indicates volume mount point inside container
	// if mount_dir is empty then it will be mounted on /mnt
	MountDir string `json:"mountDir,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this config volume ref
func (m *ConfigVolumeRef) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this config volume ref based on context it is used
func (m *ConfigVolumeRef) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigVolumeRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigVolumeRef) UnmarshalBinary(b []byte) error {
	var res ConfigVolumeRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
