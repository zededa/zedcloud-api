// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConfigACEAction config a c e action
//
// swagger:model configACEAction
type ConfigACEAction struct {

	// app port
	AppPort int64 `json:"appPort,omitempty"`

	// drop
	Drop bool `json:"drop,omitempty"`

	// limit action, and its associated parameter
	Limit bool `json:"limit,omitempty"`

	// limitburst
	Limitburst int64 `json:"limitburst,omitempty"`

	// limitrate
	Limitrate int64 `json:"limitrate,omitempty"`

	// limitunit
	Limitunit string `json:"limitunit,omitempty"`

	// port map action, and its associated parameter
	Portmap bool `json:"portmap,omitempty"`
}

// Validate validates this config a c e action
func (m *ConfigACEAction) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this config a c e action based on context it is used
func (m *ConfigACEAction) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigACEAction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigACEAction) UnmarshalBinary(b []byte) error {
	var res ConfigACEAction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
