// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BulkService type of bulk operation
//
// swagger:model BulkService
type BulkService string

func NewBulkService(value BulkService) *BulkService {
	return &value
}

// Pointer returns a pointer to a freshly-allocated BulkService.
func (m BulkService) Pointer() *BulkService {
	return &m
}

const (

	// BulkServiceBULKSERVICEUNSPECIFIED captures enum value "BULK_SERVICE_UNSPECIFIED"
	BulkServiceBULKSERVICEUNSPECIFIED BulkService = "BULK_SERVICE_UNSPECIFIED"

	// BulkServiceBULKSERVICEBASEOSUPDATE captures enum value "BULK_SERVICE_BASEOS_UPDATE"
	BulkServiceBULKSERVICEBASEOSUPDATE BulkService = "BULK_SERVICE_BASEOS_UPDATE"

	// BulkServiceBULKSERVICEAPPINSTANCEDEPLOY captures enum value "BULK_SERVICE_APPINSTANCE_DEPLOY"
	BulkServiceBULKSERVICEAPPINSTANCEDEPLOY BulkService = "BULK_SERVICE_APPINSTANCE_DEPLOY"

	// BulkServiceBULKSERVICEAPPINSTANCEREFRESH captures enum value "BULK_SERVICE_APPINSTANCE_REFRESH"
	BulkServiceBULKSERVICEAPPINSTANCEREFRESH BulkService = "BULK_SERVICE_APPINSTANCE_REFRESH"

	// BulkServiceBULKSERVICEAPPINSTANCEPURGE captures enum value "BULK_SERVICE_APPINSTANCE_PURGE"
	BulkServiceBULKSERVICEAPPINSTANCEPURGE BulkService = "BULK_SERVICE_APPINSTANCE_PURGE"

	// BulkServiceBULKSERVICEMODELIMPORT captures enum value "BULK_SERVICE_MODEL_IMPORT"
	BulkServiceBULKSERVICEMODELIMPORT BulkService = "BULK_SERVICE_MODEL_IMPORT"

	// BulkServiceBULKSERVICEBUNDLEIMPORT captures enum value "BULK_SERVICE_BUNDLE_IMPORT"
	BulkServiceBULKSERVICEBUNDLEIMPORT BulkService = "BULK_SERVICE_BUNDLE_IMPORT"

	// BulkServiceBULKSERVICEAPPINSTANCECERTUPDATE captures enum value "BULK_SERVICE_APPINSTANCE_CERT_UPDATE"
	BulkServiceBULKSERVICEAPPINSTANCECERTUPDATE BulkService = "BULK_SERVICE_APPINSTANCE_CERT_UPDATE"

	// BulkServiceBULKSERVICEAPPINSTANCEDELETE captures enum value "BULK_SERVICE_APPINSTANCE_DELETE"
	BulkServiceBULKSERVICEAPPINSTANCEDELETE BulkService = "BULK_SERVICE_APPINSTANCE_DELETE"

	// BulkServiceBULKSERVICEBASEOSUPDATERETRY captures enum value "BULK_SERVICE_BASEOS_UPDATE_RETRY"
	BulkServiceBULKSERVICEBASEOSUPDATERETRY BulkService = "BULK_SERVICE_BASEOS_UPDATE_RETRY"

	// BulkServiceBULKSERVICEAPPINSTANCEUPDATE captures enum value "BULK_SERVICE_APPINSTANCE_UPDATE"
	BulkServiceBULKSERVICEAPPINSTANCEUPDATE BulkService = "BULK_SERVICE_APPINSTANCE_UPDATE"

	// BulkServiceBULKSERVICEDEVICETAGUPDATE captures enum value "BULK_SERVICE_DEVICE_TAG_UPDATE"
	BulkServiceBULKSERVICEDEVICETAGUPDATE BulkService = "BULK_SERVICE_DEVICE_TAG_UPDATE"

	// BulkServiceBULKSERVICEDEVICETAGDEPLOYMENTUPDATE captures enum value "BULK_SERVICE_DEVICE_TAG_DEPLOYMENT_UPDATE"
	BulkServiceBULKSERVICEDEVICETAGDEPLOYMENTUPDATE BulkService = "BULK_SERVICE_DEVICE_TAG_DEPLOYMENT_UPDATE"

	// BulkServiceBULKSERVICEDEVICEPROJECTANDTARGETUPDATE captures enum value "BULK_SERVICE_DEVICE_PROJECT_AND_TARGET_UPDATE"
	BulkServiceBULKSERVICEDEVICEPROJECTANDTARGETUPDATE BulkService = "BULK_SERVICE_DEVICE_PROJECT_AND_TARGET_UPDATE"

	// BulkServiceBULKSERVICEDEPLOYMENTCREATE captures enum value "BULK_SERVICE_DEPLOYMENT_CREATE"
	BulkServiceBULKSERVICEDEPLOYMENTCREATE BulkService = "BULK_SERVICE_DEPLOYMENT_CREATE"
)

// for schema
var bulkServiceEnum []interface{}

func init() {
	var res []BulkService
	if err := json.Unmarshal([]byte(`["BULK_SERVICE_UNSPECIFIED","BULK_SERVICE_BASEOS_UPDATE","BULK_SERVICE_APPINSTANCE_DEPLOY","BULK_SERVICE_APPINSTANCE_REFRESH","BULK_SERVICE_APPINSTANCE_PURGE","BULK_SERVICE_MODEL_IMPORT","BULK_SERVICE_BUNDLE_IMPORT","BULK_SERVICE_APPINSTANCE_CERT_UPDATE","BULK_SERVICE_APPINSTANCE_DELETE","BULK_SERVICE_BASEOS_UPDATE_RETRY","BULK_SERVICE_APPINSTANCE_UPDATE","BULK_SERVICE_DEVICE_TAG_UPDATE","BULK_SERVICE_DEVICE_TAG_DEPLOYMENT_UPDATE","BULK_SERVICE_DEVICE_PROJECT_AND_TARGET_UPDATE","BULK_SERVICE_DEPLOYMENT_CREATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bulkServiceEnum = append(bulkServiceEnum, v)
	}
}

func (m BulkService) validateBulkServiceEnum(path, location string, value BulkService) error {
	if err := validate.EnumCase(path, location, value, bulkServiceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this bulk service
func (m BulkService) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBulkServiceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this bulk service based on context it is used
func (m BulkService) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
