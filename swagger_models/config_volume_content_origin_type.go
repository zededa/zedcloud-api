// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConfigVolumeContentOriginType config volume content origin type
//
// swagger:model configVolumeContentOriginType
type ConfigVolumeContentOriginType string

func NewConfigVolumeContentOriginType(value ConfigVolumeContentOriginType) *ConfigVolumeContentOriginType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConfigVolumeContentOriginType.
func (m ConfigVolumeContentOriginType) Pointer() *ConfigVolumeContentOriginType {
	return &m
}

const (

	// ConfigVolumeContentOriginTypeVCOTUNKNOWN captures enum value "VCOT_UNKNOWN"
	ConfigVolumeContentOriginTypeVCOTUNKNOWN ConfigVolumeContentOriginType = "VCOT_UNKNOWN"

	// ConfigVolumeContentOriginTypeVCOTBLANK captures enum value "VCOT_BLANK"
	ConfigVolumeContentOriginTypeVCOTBLANK ConfigVolumeContentOriginType = "VCOT_BLANK"

	// ConfigVolumeContentOriginTypeVCOTDOWNLOAD captures enum value "VCOT_DOWNLOAD"
	ConfigVolumeContentOriginTypeVCOTDOWNLOAD ConfigVolumeContentOriginType = "VCOT_DOWNLOAD"
)

// for schema
var configVolumeContentOriginTypeEnum []interface{}

func init() {
	var res []ConfigVolumeContentOriginType
	if err := json.Unmarshal([]byte(`["VCOT_UNKNOWN","VCOT_BLANK","VCOT_DOWNLOAD"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		configVolumeContentOriginTypeEnum = append(configVolumeContentOriginTypeEnum, v)
	}
}

func (m ConfigVolumeContentOriginType) validateConfigVolumeContentOriginTypeEnum(path, location string, value ConfigVolumeContentOriginType) error {
	if err := validate.EnumCase(path, location, value, configVolumeContentOriginTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this config volume content origin type
func (m ConfigVolumeContentOriginType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConfigVolumeContentOriginTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this config volume content origin type based on context it is used
func (m ConfigVolumeContentOriginType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
