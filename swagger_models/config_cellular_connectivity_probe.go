// Copyright (c) 2018-2021 Zededa, Inc.\n// SPDX-License-Identifier: Apache-2.0\n
// Code generated by go-swagger; DO NOT EDIT.

package swagger_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConfigCellularConnectivityProbe CellularConnectivityProbe is used to periodically check the connectivity status of a cellular network
// by probing a remote endpoint.
// Whenever the probe fails, the cellular connection is automatically restarted. If the probe keeps failing
// even after the restart, the failure is reported in ZCellularStatus.probeError.
// The connectivity probing interval is 5 minutes and currently it is not configurable.
//
// swagger:model configCellularConnectivityProbe
type ConfigCellularConnectivityProbe struct {

	// If true, then probing is disabled.
	Disable bool `json:"disable,omitempty"`

	// IP/FQDN to periodically probe using 3 pings per iteration to determine connectivity status.
	// Default address is "8.8.8.8" (Google Public DNS).
	ProbeAddress string `json:"probeAddress,omitempty"`
}

// Validate validates this config cellular connectivity probe
func (m *ConfigCellularConnectivityProbe) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this config cellular connectivity probe based on context it is used
func (m *ConfigCellularConnectivityProbe) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigCellularConnectivityProbe) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigCellularConnectivityProbe) UnmarshalBinary(b []byte) error {
	var res ConfigCellularConnectivityProbe
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
